# Copyright © 2009, The AROS Development Team. All rights reserved.
# $Id$

-include $(TOP)/config/make.cfg

#MM- contrib-sdl : development-SDL


#MM- development : development-SDL



GNU_REPOSITORY := gnu://


#MM- development-SDL-quick : development-SDL--quick
#MM- development-SDL--quick : development-SDL--fetch
#MM- development-SDL-fetch : development-SDL--fetch
 
development-SDL-archbase  := SDL-1.2.11

ifeq (target,host)
    development-SDL-portdir  := $(HOSTDIR)/Ports/SDL
else
    development-SDL-portdir  := $(PORTSDIR)/SDL
endif

ifeq ($(AROS_DEVELOPMENT),)
    development-SDL-prefix := $(CONTRIB_DIR)/SDL
else
    development-SDL-prefix := $(AROS_DEVELOPMENT)
endif

ifneq (,)
    development-SDL--archbase  := SDL--1.2.11
else
    development-SDL--archbase  := SDL-1.2.11
endif

ifneq (,)
    development-SDL--srcdir  := 
else
    development-SDL--srcdir  := $(development-SDL-archbase)
endif

ifeq (yes,yes)
    development-SDL--patches_specs := $(development-SDL--archbase)-aros.diff:$(development-SDL--srcdir):-p1    
else
    development-SDL--patches_specs := ::
endif

.PHONY : development-SDL--fetch
#MM
development-SDL--fetch :
	$(FETCH) -ao ". http://www.libsdl.org/release $(GNU_REPOSITORY)SDL" -a $(development-SDL--archbase) -s "tar.bz2 tar.gz" -l $(PORTSSOURCEDIR) -d $(development-SDL-portdir) \
        -po ". " -p $(development-SDL--patches_specs)

#MM- development-SDL : development-SDL-

development-SDL--package-dir := $(development-SDL-portdir)/$(development-SDL--archbase)

development-SDL--package-basename := \
    $(DISTDIR)/Packages/$(development-SDL--archbase)-aros.$(AROS_TARGET_CPU)


ifneq ($(development-SDL-prefix),)
    development-SDL--prefix := $(development-SDL-prefix)
else
    development-SDL--prefix := $(AROS_CONTRIB)
endif

ifneq (/Development,)
    development-SDL--aros_prefix := /Development
else
    development-SDL--aros_prefix := $(development-SDL--prefix)
endif

ifeq (yes,yes)
    development-SDL--nix    := -nix
    development-SDL--volpfx := /
    development-SDL--volsfx := /
    
    ifeq (,)
        development-SDL--nix_dir_layout := yes
    endif
else
    development-SDL--volsfx := :
    
    ifeq (,)
        development-SDL--nix_dir_layout := no
    endif
endif

development-SDL--volfunc = $(development-SDL--volpfx)$(notdir $1)$(development-SDL--volsfx)

development-SDL--install_opts := prefix=$(development-SDL--prefix) \
	exec_prefix=$(development-SDL--prefix) 

# Check if chosen compiler is valid
ifeq ($(findstring target,host target kernel),)
  $(error unknown compiler target)
endif

# Set legacy 'host' variable based on chosen compiler
ifeq (target,host)
    host := yes
	ifeq (SDL,)
		development-SDL--pkgdir := $(HOSTGENDIR)/$(CURDIR)
	else
		development-SDL--pkgdir := $(HOSTGENDIR)/$(CURDIR)/SDL
	endif
else
    host := no
	ifeq (SDL,)
		development-SDL--pkgdir := $(GENDIR)/$(CURDIR)
	else
		development-SDL--pkgdir := $(GENDIR)/$(CURDIR)/SDL
	endif
endif

development-SDL--configflag := $(development-SDL--pkgdir)/.configured
development-SDL--installflag := $(development-SDL--pkgdir)/.installed

ifeq ($(filter yes, $(development-SDL--nix_dir_layout) $(host)),yes)
    development-SDL--PROGDIR      := $(development-SDL--aros_prefix)/bin
    development-SDL--config_opts  := --prefix=$(development-SDL--aros_prefix)
else
    ifeq (yes,yes)
        development-SDL--config_opts := --prefix=/PROGDIR  --bindir=/PROGDIR --sbindir=/PROGDIR \
        --libdir=/LIB --includedir=/INCLUDE --oldincludedir=/INCLUDE   
    else
        development-SDL--config_opts  := --prefix=$(development-SDL--aros_prefix)
    endif

    development-SDL--PROGDIR := $(development-SDL--aros_prefix)
    
    development-SDL--install_opts := bindir=$(development-SDL--prefix) \
	sbindir=$(development-SDL--prefix) \
	libdir=$(AROS_LIB) includedir=$(AROS_INCLUDES) \
	oldincludedir=$(AROS_INCLUDES) 
endif


.PHONY : development-SDL- development-SDL--clean development-SDL--build_and_install-quick

#MM- development-SDL- : setup includes linklibs-core development-SDL--quick

# Using -j1 in install_command may result in a warning but finally
# it does its job. make install for gcc does not work reliable for -jN
# where N > 1.
ifneq (install,)
    development-SDL--install_command = \
        $(MAKE) PROGDIR="$(development-SDL--PROGDIR)/" $(development-SDL--install_opts) \
        -C $(development-SDL--pkgdir) install -j1 && \
        $(TOUCH) $(development-SDL--installflag)

    development-SDL--uninstall_command = \
    $(RM) $(development-SDL--installflag) && \
    $(MAKE) PROGDIR="$(development-SDL--PROGDIR)/" $(development-SDL--install_opts) \
    -C $(development-SDL--pkgdir) uninstall
else
    development-SDL--install_command   := true
    development-SDL--uninstall_command := true
endif

#MM- development-SDL--quick : development-SDL--configure  development-SDL--build_and_install-quick       development-SDL--make-package

#MM
development-SDL--build_and_install-quick :  $(development-SDL--configflag)
	if ! $(MAKE) PROGDIR="$(call development-SDL--volfunc, PROGDIR)" -q -C $(development-SDL--pkgdir); then \
            $(RM)  $(development-SDL--installflag) && \
	    $(MAKE) PROGDIR="$(call development-SDL--volfunc, PROGDIR)" -C $(development-SDL--pkgdir) && \
	    $(development-SDL--install_command); \
        fi

$(development-SDL-portdir)/$(development-SDL--srcdir)/.files-touched:
	find $(development-SDL-portdir)/$(development-SDL--srcdir) -exec $(TOUCH) -r $(development-SDL-portdir)/$(development-SDL--srcdir)/configure '{}' \; && \
	$(TOUCH) $@

#MM
development-SDL--uninstall :
	$(development-SDL--uninstall_command)

ifneq ($(DEBUG),yes)
    development-SDL--s_flag = -s
endif

#MM
development-SDL--configure : $(development-SDL--configflag)

ifeq (target,host)
$(development-SDL--configflag) : $(development-SDL-portdir)/$(development-SDL--srcdir)/.files-touched $(TOP)/$(CURDIR)/mmakefile
	$(RM) $@ 
	@$(FOR) dir in $(development-SDL--pkgdir) ; do \
	    $(IF) $(TEST) ! -d $$dir ; then $(MKDIR) $$dir ; else $(NOP) ; fi ; \
	done
	cd $(development-SDL--pkgdir) && \
	find . -name config.cache -exec $(RM) '{}' \; && \
	CC="$(HOST_CC)" \
	    $(development-SDL-portdir)/$(development-SDL--srcdir)/configure $(development-SDL--config_opts)  && \
	    $(TOUCH) $@
endif
ifeq (target,target)
$(development-SDL--configflag) : $(development-SDL-portdir)/$(development-SDL--srcdir)/.files-touched $(TOP)/$(CURDIR)/mmakefile
	$(RM) $@
	@$(FOR) dir in $(development-SDL--pkgdir) ; do \
	    $(IF) $(TEST) ! -d $$dir ; then $(MKDIR) $$dir ; else $(NOP) ; fi ; \
	done
	cd $(development-SDL--pkgdir) && \
	find . -name config.cache -exec $(RM) '{}' \; && \
	CC="$(TARGET_CC) $(development-SDL--nix) $(development-SDL--s_flag)" \
	    AS="$(TARGET_AS)" CC_FOR_BUILD="$(HOST_CC)" RANLIB="$(RANLIB)" \
	    $(development-SDL-portdir)/$(development-SDL--srcdir)/configure $(development-SDL--config_opts)  \
	    --build=$(AROS_HOST_CPU)-$(AROS_HOST_ARCH) \
	    --host=$(AROS_TARGET_CPU)-aros \
	    --target=$(AROS_TARGET_CPU)-aros \
	    --disable-nls \
	    --without-x --without-pic --disable-shared && \
	    $(TOUCH) $@
endif
ifeq (target,kernel)
$(development-SDL--configflag) : $(development-SDL-portdir)/$(development-SDL--srcdir)/.files-touched $(TOP)/$(CURDIR)/mmakefile
	$(RM) $@
	@$(FOR) dir in $(development-SDL--pkgdir) ; do \
	    $(IF) $(TEST) ! -d $$dir ; then $(MKDIR) $$dir ; else $(NOP) ; fi ; \
	done
	cd $(development-SDL--pkgdir) && \
	find . -name config.cache -exec $(RM) '{}' \; && \
	CC="$(KERNEL_CC) $(KERNEL_CFLAGS) $(development-SDL--nix) $(development-SDL--s_flag)" \
	    AS="$(TARGET_AS)" CC_FOR_BUILD="$(HOST_CC)" RANLIB="$(RANLIB)" \
	    $(development-SDL-portdir)/$(development-SDL--srcdir)/configure $(development-SDL--config_opts)  \
	    --build=$(AROS_HOST_CPU)-$(AROS_HOST_ARCH) \
	    --host=$(AROS_TARGET_CPU)-aros \
	    --target=$(AROS_TARGET_CPU)-aros --disable-nls \
	    --without-x --without-pic --disable-shared && \
	    $(TOUCH) $@
endif
	
#MM
development-SDL--clean : development-SDL--uninstall
	@$(RM) $(development-SDL--pkgdir)

.PHONY : development-SDL--make-package
#MM development-SDL--make-package : development-SDL--quick

#MM
development-SDL--make-package : $(development-SDL--package-basename).tar.bz2
 
#There seems to be a bug, either with my clock or with make, 'cause it may happen
#that $^ and $@ have exactly the same mtime, and in that case make tries
#to rebuild $@ again, which would fail because the directory where
#the package got installed would not exist anymore. 
#We work this around by using an if statement to manually check the mtimes.
$(development-SDL--package-basename).tar.bz2 :
	@$(IF) test $(development-SDL-installflag) -nt $@ || ! test -f $@; then \
        $(RM) $@ ; \
        $(ECHO) "Building \`$(development-SDL--package-basename).tar.bz2'" ; \
        mkdir -p "$(DISTDIR)/Packages" ; \
        mkdir -p "$(development-SDL-prefix)" ; \
        cd $(development-SDL--package-dir) ; \
        tar -cvf $(development-SDL--package-basename).tar * ; \
        bzip2 -9 -f $(development-SDL--package-basename).tar ; \
    fi

    

# Delete generated makefiles
#MM
clean ::
	@$(RM) $(TOP)/$(CURDIR)/mmakefile $(TOP)/$(CURDIR)/mmakefile.bak

include $(SRCDIR)/config/make.tail

BDID := $(BDTARGETID)
