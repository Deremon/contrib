@database Indent.guide

@Master Indent.texinfo

@Width 72


This is the AmigaGuide® file Indent.guide, produced by Makeinfo-1.55 from 
the input file Indent.texinfo.

   Copyright (C) 1989, 1992, 1993, 1994 Free Software Foundation, Inc.

   This is Edition 1.3, January, 1994, of `The @{b}indent@{ub} Manual', for
Indent Version 1.9

   Permission is granted to make and distribute verbatim copies of this
manual provided the copyright notice and this permission notice are
preserved on all copies.


@Node Main "Indent.guide"
@Next "Indent Program"

@{b}indent@{ub}:  Indent and Format C Program Source
*******************************************

   The @{b}indent@{ub} program changes the appearance of a C program by
inserting or deleting whitespace.

   This is Edition 1.3, January 1994, of `The @{b}indent@{ub} Manual', for
Indent Version 1.9


 @{" Indent Program " Link "Indent Program"}               The @{b}indent@{ub} Program
 @{" Option Summary " Link "Option Summary"}               Option Summary
 @{" Index " Link "Index"}                        Index


@EndNode

@Node "Indent Program" "Indent.guide/Indent Program"
@Next "Option Summary"
@Prev "Main"
@Toc "Main"

The @{b}indent@{ub} Program
******************

   The @{b}indent@{ub} program can be used to make code easier to read.  It can
also convert from one style of writing C to another.

   @{b}indent@{ub} understands a substantial amount about the syntax of C, but
it also attempts to cope with incomplete and misformed syntax.

   In version 1.2 and more recent versions, the GNU style of indenting
is the default.


 @{" Invoking indent " Link "Invoking indent"}              Invoking @{b}indent@{ub}
 @{" Backup files " Link "Backup files"}                 Backup Files
 @{" Common styles " Link "Common styles"}                Common styles
 @{" Blank lines " Link "Blank lines"}                  Blank lines
 @{" Comments " Link "Comments"}                     Comments
 @{" Statements " Link "Statements"}                   Statements
 @{" Declarations " Link "Declarations"}                 Declarations
 @{" Indentation " Link "Indentation"}                  Indentation
 @{" Disabling Formatting " Link "Disabling Formatting"}         Disabling Formatting
 @{" Miscellaneous options " Link "Miscellaneous options"}        Miscellaneous options
 @{" Bugs " Link "Bugs"}                  	Bugs
 @{" Copyright " Link "Copyright"}                    Copyright


@EndNode

@Node "Invoking indent" "Indent.guide/Invoking indent"
@Next "Backup files"
@Toc "Indent Program"

Invoking @{b}indent@{ub}
===============

   As of version 1.3, the format of the @{b}indent@{ub} command is:

     indent [@{i}options@{ui}] [@{i}input-files@{ui}]
     
     indent [@{i}options@{ui}] [@{i}single-input-file@{ui}] [-o @{i}output-file@{ui}]

   This format is different from earlier versions and other versions of
@{b}indent@{ub}.

   In the first form, one or more input files are specified.  @{b}indent@{ub}
makes a backup copy of each file, and the original file is replaced with
its indented version.  See @{"Backup files" Link "Backup files"}, for an explanation of how
backups are made.

   In the second form, only one input file is specified.  In this case,
or when the standard input is used, you may specify an output file after the @{b}-o@{ub} option.

   To cause @{b}indent@{ub} to write to standard output, use the @{b}-st@{ub} option.
This is only allowed when there is only one input file, or when the
standard input is used.

   If no input files are named, the standard input is read for input.
Also, if a filename named @{b}-@{ub} is specified, then the standard input is
read.

   As an example, each of the following commands will input the program
@{b}slithy_toves.c@{ub} and write its indented text to @{b}slithy_toves.out@{ub}:

     indent slithy_toves.c -o slithy_toves.out
     
     indent -st slithy_toves.c > slithy_toves.out
     
     cat slithy_toves.c | indent -o slithy_toves.out

   Most other options to @{b}indent@{ub} control how programs are formatted.  As
of version 1.2, @{b}indent@{ub} also recognizes a long name for each option
name.  Long options are prefixed by either @{b}-@{ub} or @{b}+@{ub}.(1) In most of this
document, the traditional, short names are used for the sake of brevity.
See @{"Option Summary" Link "Option Summary"}, for a list of options, including both long and
short names.

   Here is another example:

     indent -br test/metabolism.c -l85

   This will indent the program @{b}test/metabolism.c@{ub} using the @{b}-br@{ub} and
@{b}-l85@{ub} options, write the output back to @{b}test/metabolism.c@{ub}, and write
the original contents of @{b}test/metabolism.c@{ub} to a backup file in the
directory @{b}test@{ub}.

   Equivalent invocations using long option names for this example would
be:

     indent --braces-on-if-line --line-length185 test/metabolism.c
     
     indent +braces-on-if-line +line-length185 test/metabolism.c

   If you find that you often use @{b}indent@{ub} with the same options, you may
put those options into a file called @{b}.indent.pro@{ub}.  @{b}indent@{ub} will first
look for @{b}.indent.pro@{ub} in the current directory and use that if found.
Otherwise, @{b}indent@{ub} will search your home directory for @{b}.indent.pro@{ub} and
use that file if it is found.  This behaviour is different from that of
other versions of @{b}indent@{ub}, which load both files if they both exist.

   Command line switches are handled @{i}after@{ui} processing @{b}.indent.pro@{ub}.
Options specified later override arguments specified earlier, with one
exception: Explicitly specified options always override background
options (see @{"Common styles" Link "Common styles"}).  You can prevent @{b}indent@{ub} from reading an
@{b}.indent.pro@{ub} file by specifying the @{b}-npro@{ub} option.

   ---------- Footnotes ----------

   (1)   @{b}+@{ub} is being superseded by @{b}-@{ub} to maintain consistency with the
POSIX standard.


@EndNode

@Node "Backup files" "Indent.guide/Backup files"
@Next "Common styles"
@Prev "Invoking indent"
@Toc "Indent Program"

Backup Files
============

   As of version 1.3, GNU @{b}indent@{ub} makes GNU-style backup files, the same
way GNU Emacs does.  This means that either @{i}simple@{ui} or @{i}numbered@{ui} backup
filenames may be made.

   Simple backup file names are generated by appending a suffix to the
original file name.  The default for the this suffix is the
one-character string @{b}~@{ub} (tilde).  Thus, the backup file for @{b}python.c@{ub}
would be @{b}python.c~@{ub}.

   Instead of the default, you may specify any string as a suffix by
setting the environment variable @{b}SIMPLE_BACKUP_SUFFIX@{ub} to your preferred
suffix.

   Numbered backup versions of a file @{b}momewraths@{ub} look like
@{b}momewraths.c.~23~@{ub}, where 23 is the version of this particular backup.
When making a numbered backup of the file @{b}src/momewrath.c@{ub}, the backup
file will be named @{b}src/momewrath.c.~@{i}V@{ui}~@{ub}, where @{i}V@{ui} is one greater than the
highest version currently existing in the directory @{b}src@{ub}.

   The type of backup file made is controlled by the value of the
environment variable @{b}VERSION_CONTROL@{ub}.  If it is the string @{b}simple@{ub}, then
only simple backups will be made.  If its value is the string @{b}numbered@{ub},
then numbered backups will be made.  If its value is @{b}numbered-existing@{ub},
then numbered backups will be made if there @{i}already exist@{ui} numbered
backups for the file being indented; otherwise, a simple backup is
made.  If @{b}VERSION_CONTROL@{ub} is not set, then @{b}indent@{ub} assumes the behaviour
of @{b}numbered-existing@{ub}.

   Other versions of @{b}indent@{ub} use the suffix @{b}.BAK@{ub} in naming backup files.
This behaviour can be emulated by setting @{b}SIMPLE_BACKUP_SUFFIX@{ub} to @{b}.BAK@{ub}.

   Note also that other versions of @{b}indent@{ub} make backups in the current
directory, rather than in the directory of the source file as GNU
@{b}indent@{ub} now does.


@EndNode

@Node "Common styles" "Indent.guide/Common styles"
@Next "Blank lines"
@Prev "Backup files"
@Toc "Indent Program"

Common styles
=============

   There are several common styles of C code, including the GNU style,
the Kernighan & Ritchie style, and the original Berkeley style.  A
style may be selected with a single @{i}background@{ui} option, which specifies
a set of values for all other options.  However, explicitly specified
options always override options implied by a background option.

   As of version 1.2, the default style of GNU @{b}indent@{ub} is the GNU style.
Thus, it is no longer neccessary to specify the option @{b}-gnu@{ub} to obtain
this format, although doing so will not cause an error.  Option
settings which correspond to the GNU style are:

     -nbad -bap -nbc -bl -bli2 -c33 -cd33 -ncdb -nce -cli0
     -cp1 -di2 -nfc1 -nfca -i2 -ip5 -lp -pcs -psl -cs
     -nsc -nsob -nss -ts8 -d0 -ci0 -l78

   The GNU coding style is that preferred by the GNU project.  It is the
style that the GNU Emacs C mode encourages and which is used in the C
portions of GNU Emacs.  (People interested in writing programs for
Project GNU should get a copy of `The GNU Coding Standards', which also
covers semantic and portability issues such as memory usage, the size
of integers, etc.)

   The Kernighan & Ritchie style is used throughout their well-known
book `The C Programming Language'.  It is enabled with the @{b}-kr@{ub} option.
The Kernighan & Ritchie style corresponds to the following set of
options:

     -nbad -bap -nbc -br -c33 -cd33 -ncdb -ce -ci4
     -cli0 -cp33 -d0 -di1 -nfc1 -nfca -i4 -ip0 -l75 -lp
     -npcs -npsl -nsc -nsob -nss -ts8 -cs

Kernighan & Ritchie style does not put comments to the right of code in
the same column at all times (nor does it use only one space to the
right of the code), so for this style @{b}indent@{ub} has arbitrarily chosen
column 33.

   The style of the original Berkeley @{b}indent@{ub} may be obtained by
specifying @{b}-orig@{ub} (or by specifyfying @{b}-original@{ub}, using the long option
name).  This style is equivalent to the following settings:

     -nbap -nbad -bc -br -c33 -cd33 -cdb -ce -ci4
     -cli0 -cp33 -d4 -di16 -fc1 -fca -i4 -ip4 -l75 -lp
     -npcs -psl -sc -nsob -nss -ts8 -ncs


@EndNode

@Node "Blank lines" "Indent.guide/Blank lines"
@Next "Comments"
@Prev "Common styles"
@Toc "Indent Program"

Blank lines
===========

   Various programming styles use blank lines in different places.
@{b}indent@{ub} has a number of options to insert or delete blank lines in
specific places.

   The @{b}-bad@{ub} option causes @{b}indent@{ub} to force a blank line after every
block of declarations.  The @{b}-nbad@{ub} option causes @{b}indent@{ub} not to force
such blank lines.

   The @{b}-bap@{ub} option forces a blank line after every procedure body.  The
@{b}-nbap@{ub} option forces no such blank line.

   The @{b}-sob@{ub} option causes @{b}indent@{ub} to swallow optional blank lines (that
is, any optional blank lines present in the input will be removed from
the output).  If the @{b}-nsob@{ub} is specified, any blank lines present in the
input file will be copied to the output file.


 @{" -bad " Link "-bad"}                         More on the @{b}-bad@{ub} option.
 @{" -bap " Link "-bap"}                         More on the @{b}-bap@{ub} option.


@EndNode

@Node "-bad" "Indent.guide/-bad"
@Next "-bap"
@Toc "Blank lines"

-blank-lines-after-declarations
-------------------------------

   The @{b}-bad@{ub} option forces a blank line after every block of
declarations.  The @{b}-nbad@{ub} option does not add any such blank lines.

   For example, given the input
     char *foo;
     char *bar;
     /* This separates blocks of declarations.  */
     int baz;

@{b}indent -bad@{ub} produces

     char *foo;
     char *bar;
     
     /* This separates blocks of declarations.  */
     int baz;

and @{b}indent -nbad@{ub} produces

     char *foo;
     char *bar;
     /* This separates blocks of declarations.  */
     int baz;


@EndNode

@Node "-bap" "Indent.guide/-bap"
@Prev "-bad"
@Toc "Blank lines"

-blank-lines-after-procedures
-----------------------------

   The @{b}-bap@{ub} option forces a blank line after every procedure body.

   For example, given the input

     int
     foo ()
     {
       puts("Hi");
     }
     /* The procedure bar is even less interesting.  */
     char *
     bar ()
     {
       puts("Hello");
     }

@{b}indent -bap@{ub} produces

     int
     foo ()
     {
       puts ("Hi");
     }
     
     /* The procedure bar is even less interesting.  */
     char *
     bar ()
     {
       puts ("Hello");
     }

and @{b}indent -nbap@{ub} produces

     int
     foo ()
     {
       puts ("Hi");
     }
     /* The procedure bar is even less interesting.  */
     char *
     bar ()
     {
       puts ("Hello");
     }

No blank line will be added after the procedure @{b}foo@{ub}.


@EndNode

@Node "Comments" "Indent.guide/Comments"
@Next "Statements"
@Prev "Blank lines"
@Toc "Indent Program"

Comments
========

   @{b}indent@{ub} formats both C and C++ comments. C comments are begun with @{b}/*@{ub}
and terminated with @{b}*/@{ub} and may contain newline characters.  C++
comments begin with the delimiter @{b}//@{ub} and end at the newline.

   @{b}indent@{ub} handles comments differently depending upon their context.
@{b}indent@{ub} attempts to distinguish amongst comments which follow
statements, comments which follow declarations, comments following
preprocessor directives, and comments which are not preceded by code of
any sort, i.e., they begin the text of the line (although not
neccessarily in column 1).

   @{b}indent@{ub} further attempts to leave @{i}boxed comments@{ui} unmodified.  The
general idea of such a comment is that it is enclosed in a rectangle or
"box" of stars or dashes to visually set it apart.  More precisely,
boxed comments are defined as those in which the initial @{b}/*@{ub} is followed
immediately by the character @{b}*@{ub}, @{b}=@{ub}, @{b}_@{ub}, or @{b}-@{ub}, or those in which the
beginning comment delimiter (@{b}/*@{ub}) is on a line by itself, and the
following line begins with a @{b}*@{ub} in the same column as the star of the
opening delimiter.

   Examples of boxed comments are:

     /**********************
      * Comment in a box!! *
      **********************/
     
            /*
             * A different kind of scent,
             * for a different kind of comment.
             */

   @{b}indent@{ub} attempts to leave boxed comments exactly as they are found in
the source file.  Thus the indentation of the comment is unchanged, and
its length is not checked in any way.  The only alteration made is that
an embedded tab character may be converted into the appropriate number
of spaces.

   Comments which are not boxed may be formatted, which means that the
line is broken to fit within a right margin and left-filled with
whitespace.  Single newlines are equivalent to a space, but blank lines
(two or more newlines in a row) are taken to mean a paragraph break.
Formatting of comments which begin after the first column is enabled
with the @{b}-fca@{ub} option.  To format those beginning in column one, specify
@{b}-fc1@{ub}.  Such formatting is disabled by default.

   The right margin for formatting defaults to 78, but may be changed
with the @{b}-lc@{ub} or the @{b}-l@{ub} option.  @{b}-l@{ub} specifies the right margin for all
code, and @{b}-lc@{ub} specifies the margin for only for comments.  If @{b}-l@{ub} is
used alone, comments will be formatted according to the margin
specified with that option.

   If the margin specified does not allow the comment to be printed, the
margin will be automatically extended for the duration of that comment.
The margin is not respected if the comment is not being formatted.

   If the comment begins a line (i.e., there is no program text to its
left), it will be indented to the column it was found in unless the
comment is within a block of code.  In that case, such a comment will
be aligned with the indented code of that block.  This alignment may be
affected by the @{b}-d@{ub} option, which specifies an amount by which such
comments are moved to the @{i}left@{ui}, or unindented.  For example, @{b}-d2@{ub} places
comments two spaces to the left of code.  By default, comments are
aligned with code.

   Comments to the right of code will appear by default in column 33.
This may be changed with one of three options.  @{b}-c@{ub} will specify the
column for comments following code, @{b}-cd@{ub} specifies the column for
comments following declarations, and @{b}-cp@{ub} specifies the column for
comments following preprocessor directives @{b}#else@{ub} and @{b}#endif@{ub}.

   If the code to the left of the comment exceeds the beginning column,
the comment column will be extended to the next tabstop column past the
end of the code, or in the case of preprocessor directives, to one
space past the end of the directive.  This extension lasts only for the
output of that particular comment.

   The @{b}-cdb@{ub} option places the comment delimiters on blank lines.  Thus,
a single line comment like @{b}/* Claustrophobia */@{ub} can be transformed into:

     /*
        Claustrophobia
      */

   Stars can be placed at the beginning of multi-line comments with the
@{b}-sc@{ub} option.  Thus, the single-line comment above can be transformed
(with @{b}-cdb -sc@{ub}) into:

     /*
      * Claustrophobia
      */


@EndNode

@Node "Statements" "Indent.guide/Statements"
@Next "Declarations"
@Prev "Comments"
@Toc "Indent Program"

Statements
==========

   The @{b}-br@{ub} or @{b}-bl@{ub} option specifies how to format braces.

   The @{b}-br@{ub} option formats statement braces like this:

     if (x > 0) {
       x--;
     }

The @{b}-bl@{ub} option formats them like this:

     if (x > 0)
       {
         x--;
       }

   These options also affect structure and enumeration declarations.
The @{b}-br@{ub} option produces structure declarations like the following:

     struct Sname {
         int i;
         char chp;
     } Vname;

   The default behaviour, also obtained by specifying @{b}-bl@{ub}, would yield
the following format for the same declaration:

     struct Sname
       {
          int i;
          char chp;
       }
     Vname;

   If you use the @{b}-bl@{ub} option, you may also want to specify the @{b}-bli@{ub}
option.  This option specifies the number of spaces by which braces are
indented.  @{b}-bli2@{ub}, the default, gives the result shown above.  @{b}-bli0@{ub}
results in the following:

     if (x > 0)
     {
       x--;
     }

   If you are using the @{b}-br@{ub} option, you probably want to also use the
@{b}-ce@{ub} option.  This causes the @{b}else@{ub} in an if-then-else construct to
cuddle up to the immediately preceding @{b}}@{ub}.  For example, with @{b}-br -ce@{ub}
you get the following:

     if (x > 0) {
       x--;
     } else {
       fprintf (stderr, "...something wrong?\n");
     }

With @{b}-br -nce@{ub} that code would appear as

     if (x > 0) {
       x--;
     }
     else {
       fprintf (stderr, "...something wrong?\n");
     }

   The @{b}-cli@{ub} option specifies the number of spaces that case labels
should be indented to the right of the containing @{b}switch@{ub} statement.

   If a semicolon is on the same line as a @{b}for@{ub} or @{b}while@{ub} statement, the
@{b}-ss@{ub} option will cause a space to be placed before the semicolon.  This
emphasizes the semicolon, making it clear that the body of the @{b}for@{ub} or
@{b}while@{ub} statement is an empty statement.  @{b}-nss@{ub} disables this feature.

   The @{b}-pcs@{ub} option causes a space to be placed between the name of the
procedure being called and the @{b}(@{ub} (for example, @{b}puts ("Hi");@{ub}.  The @{b}-npcs@{ub}
option would give @{b}puts("Hi");@{ub}).

   If the @{b}-cs@{ub} option is specified, @{b}indent@{ub} puts a space after a cast
operator.

   The @{b}-bs@{ub} option ensures that there is a space between the keyword
@{b}sizeof@{ub} and its argument.  In some versions, this is known as the
@{b}Bill_Shannon@{ub} option.


@EndNode

@Node "Declarations" "Indent.guide/Declarations"
@Next "Indentation"
@Prev "Statements"
@Toc "Indent Program"

Declarations
============

   By default @{b}indent@{ub} will line up identifiers, in the column specified
by the @{b}-di@{ub} option.  For example, @{b}-di16@{ub} makes things look like:

     int             foo;
     char           *bar;

   Using a small value (such as one or two) for the @{b}-di@{ub} option can be
used to cause the indentifiers to be placed in the first available
position, for example

     int foo;
     char *bar;

   The value given to the @{b}-di@{ub} option will still affect variables which
are put on separate lines from their types, for example @{b}-di2@{ub} will lead
to

     int
       foo;

   If the @{b}-bc@{ub} option is specified, a newline is forced after each comma
in a declaration.  For example,

     int a,
       b,
       c;

With the @{b}-nbc@{ub} option this would look like

     int a, b, c;

   The @{b}-psl@{ub} option causes the type of a procedure being defined to be
placed on the line before the name of the procedure.  This style is
required for the @{b}etags@{ub} program to work correctly, as well as some of
the @{b}c-mode@{ub} functions of Emacs.

   If you are not using the @{b}-di1@{ub} option to place variables being
declared immediately after their type, you need to use the @{b}-T@{ub} option to
tell @{b}indent@{ub} the name of all the typenames in your program that are
defined by @{b}typedef@{ub}.  @{b}-T@{ub} can be specified more than once, and all names
specified are used.  For example, if your program contains

     typedef unsigned long CODE_ADDR;
     typedef enum {red, blue, green} COLOR;

you would use the options @{b}-T CODE_ADDR -T COLOR@{ub}.


@EndNode

@Node "Indentation" "Indent.guide/Indentation"
@Next "Disabling Formatting"
@Prev "Declarations"
@Toc "Indent Program"

Indentation
===========

   One issue in the formatting of code is how far each line should be
indented from the left margin.  When the beginning of a statement such
as @{b}if@{ub} or @{b}for@{ub} is encountered, the indentation level is increased by the
value specified by the @{b}-i@{ub} option.  For example, use @{b}-i8@{ub} to specify an
eight character indentation for each level.  When a statement is broken
across two lines, the second line is indented by a number of additional
spaces specified by the @{b}-ci@{ub} option.  @{b}-ci@{ub} defaults to 0.  However, if
the @{b}-lp@{ub} option is specified, and a line has a left parenthesis which is
not closed on that line, then continuation lines will be lined up to
start at the character position just after the left parenthesis.  This
processing also applies to @{b}[@{ub} and applies to @{b}{@{ub} when it occurs in
initialization lists.  For example, a piece of continued code might
look like this with @{b}-nlp -ci3@{ub} in effect:

       p1 = first_procedure (second_procedure (p2, p3),
          third_procedure (p4, p5));

With @{b}-lp@{ub} in effect the code looks somewhat clearer:

       p1 = first_procedure (second_procedure (p2, p3),
                             third_procedure (p4, p5));

   @{b}indent@{ub} assumes that tabs are placed at regular intervals of both
input and output character streams.  These intervals are by default 8
columns wide, but (as of version 1.2) may be changed by the @{b}-ts@{ub} option.
Tabs are treated as the equivalent number of spaces.

   The indentation of type declarations in old-style function
definitions is controlled by the @{b}-ip@{ub} parameter.  This is a numeric
parameter specifying how many spaces to indent type declarations.  For
example, the default @{b}-ip5@{ub} makes definitions look like this:

     char *
     create_world (x, y, scale)
          int x;
          int y;
          float scale;
     {
       . . .
     }

   For compatibility with other versions of indent, the option @{b}-nip@{ub} is
provided, which is equivalent to @{b}-ip0@{ub}.

   ASCII C allows white space to be placed on preprocessor command lines
between the character @{b}#@{ub} and the command name.  By default, @{b}indent@{ub}
removes this space, but specifying the @{b}-lps@{ub} option directs @{b}indent@{ub} to
leave this space unmodified.


@EndNode

@Node "Disabling Formatting" "Indent.guide/Disabling Formatting"
@Next "Miscellaneous options"
@Prev "Indentation"
@Toc "Indent Program"

Disabling Formatting
====================

   Formatting of C code may be disabled for portions of a program by
embedding special @{i}control comments@{ui} in the program.  To turn off
formatting for a section of a program, place the disabling control
comment @{b}/* *INDENT-OFF* */@{ub} on a line by itself just before that
section.  Program text scanned after this control comment is output
precisely as input with no modifications until the corresponding
enabling comment is scanned on a line by itself.  The disabling control
comment is @{b}/* *INDENT-ON* */@{ub}, and any text following the comment on the
line is also output unformatted.  Formatting begins again with the
input line following the enabling control comment.

   More precisely, @{b}indent@{ub} does not attempt to verify the closing
delimiter (@{b}*/@{ub}) for these C comments, and any whitespace on the line is
totally transparent.

   These control comments also function in their C++ formats, namely @{b}//
*INDENT-OFF*@{ub} and @{b}// *INDENT-ON*@{ub}.

   It should be noted that the internal state of @{b}indent@{ub} remains
unchanged over the course of the unformatted section.  Thus, for
example, turning off formatting in the middle of a function and
continuing it after the end of the function may lead to bizarre
results.  It is therefore wise to be somewhat modular in selecting code
to be left unformatted.

   As a historical note, some earlier versions of @{b}indent@{ub} produced error
messages beginning with @{b}*INDENT**@{ub}.  These versions of @{b}indent@{ub} were
written to ignore any input text lines which began with such error
messages.  I have removed this incestuous feature from @{b}GNU indent@{ub}.


@EndNode

@Node "Miscellaneous options" "Indent.guide/Miscellaneous options"
@Next "Bugs"
@Prev "Disabling Formatting"
@Toc "Indent Program"

Miscellaneous options
=====================

   To find out what version of @{b}indent@{ub} you have, use the command @{b}indent
-version@{ub}.  This will report the version number of @{b}indent@{ub}, without doing
any of the normal processing.

   The @{b}-v@{ub} option can be used to turn on verbose mode.  When in verbose
mode, @{b}indent@{ub} reports when it splits one line of input into two more
more lines of output, and gives some size statistics at completion.


@EndNode

@Node "Bugs" "Indent.guide/Bugs"
@Next "Copyright"
@Prev "Miscellaneous options"
@Toc "Indent Program"

Bugs
====

   The "-troff" option is strongly deprecated, and is not supported.  A
good thing for someone to do is to rewrite `indent' to generate TeX
source as a hardcopy output option, amoung other things.


@EndNode

@Node "Copyright" "Indent.guide/Copyright"
@Prev "Bugs"
@Toc "Indent Program"

Copyright
=========

   The following copyright notice applies to the @{b}indent@{ub} program.  The
copyright and copying permissions for this manual appear near the
beginning of this document.

     Copyright (c) 1989, 1992 Free Software Foundation
     Copyright (c) 1985 Sun Microsystems, Inc.
     Copyright (c) 1980 The Regents of the University of California.
     Copyright (c) 1976 Board of Trustees of the University of Illinois.
     All rights reserved.
     
     Redistribution and use in source and binary forms are permitted
     provided that the above copyright notice and this paragraph are
     duplicated in all such forms and that any documentation,
     advertising materials, and other materials related to such
     distribution and use acknowledge that the software was developed
     by the University of California, Berkeley, the University of Illinois,
     Urbana, and Sun Microsystems, Inc.  The name of either University
     or Sun Microsystems may not be used to endorse or promote products
     derived from this software without specific prior written permission.
     THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
     IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
     WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR
     PURPOSE.


@EndNode

@Node "Option Summary" "Indent.guide/Option Summary"
@Next "Index"
@Prev "Indent Program"
@Toc "Main"

Option Summary
**************

   Here is a list of all the options for @{b}indent@{ub}, alphabetized by short
option.  It is followed by a cross key alphabetized by long option.

@{b}-bad@{ub}
@{b}-blank-lines-after-declarations@{ub}
     Force blank lines after the declarations.
     See @{"Blank lines" Link "Blank lines"}.

@{b}-bap@{ub}
@{b}-blank-lines-after-procedures@{ub}
     Force blank lines after procedure bodies.
     See @{"Blank lines" Link "Blank lines"}.

@{b}-bbb@{ub}
@{b}-blank-lines-after-block-comments@{ub}
     Force blank lines after block comments.
     See @{"Blank lines" Link "Blank lines"}.

@{b}-bc@{ub}
@{b}-blank-lines-after-commas@{ub}
     Force newline after comma in declaration.
     See @{"Declarations" Link "Declarations"}.

@{b}-bl@{ub}
@{b}-braces-after-if-line@{ub}
     Put braces on line after @{b}if@{ub}, etc.
     See @{"Statements" Link "Statements"}.

@{b}-bli@{i}n@{ui}@{ub}
@{b}-brace-indent@{i}n@{ui}@{ub}
     Indent braces @{i}n@{ui} spaces.
     See @{"Statements" Link "Statements"}.

@{b}-br@{ub}
@{b}-braces-on-if-line@{ub}
     Put braces on line with @{b}if@{ub}, etc. and structure declarations
     See @{"Statements" Link "Statements"}.

@{b}-c@{i}n@{ui}@{ub}
@{b}-comment-indentation@{i}n@{ui}@{ub}
     Put comments to the right of code in column @{i}n@{ui}.
     See @{"Comments" Link "Comments"}.

@{b}-cd@{i}n@{ui}@{ub}
@{b}-declaration-comment-column@{i}n@{ui}@{ub}
     Put comments to the right of the declarations in column @{i}n@{ui}.
     See @{"Comments" Link "Comments"}.

@{b}-cdb@{ub}
@{b}-comment-delimiters-on-blank-lines@{ub}
     Put comment delimiters on blank lines.
     See @{"Comments" Link "Comments"}.

@{b}-ce@{ub}
@{b}-cuddle-else@{ub}
     Cuddle else and preceeding @{b}}@{ub}.
     See @{"Comments" Link "Comments"}.

@{b}-ci@{i}n@{ui}@{ub}
@{b}-continuation-indentation@{i}n@{ui}@{ub}
     Continuation indent of @{i}n@{ui} spaces.
     See @{"Statements" Link "Statements"}.

@{b}-cli@{i}n@{ui}@{ub}
@{b}-case-indentation@{i}n@{ui}@{ub}
     Case label indent of @{i}n@{ui} spaces.
     See @{"Statements" Link "Statements"}.

@{b}-cp@{i}n@{ui}@{ub}
@{b}-else-endif-column@{i}n@{ui}@{ub}
     Put comments to the right of @{b}#else@{ub} and @{b}#endif@{ub} statements in column
     @{i}n@{ui}.
     See @{"Comments" Link "Comments"}.

@{b}-cs@{ub}
@{b}-space-after-cast@{ub}
     Put a space after a cast operator.
     See @{"Statements" Link "Statements"}.

@{b}-bs@{ub}
@{b}-blank-before-sizeof@{ub}
     Put a space between @{b}sizeof@{ub} and its argument.
     See @{"Statements" Link "Statements"}

@{b}-d@{i}n@{ui}@{ub}
@{b}-line-comments-indentation@{i}n@{ui}@{ub}
     Set indentation of comments not to the right of code to @{i}n@{ui} spaces.
     See @{"Comments" Link "Comments"}.

@{b}-di@{i}n@{ui}@{ub}
@{b}-declaration-indentation@{i}n@{ui}@{ub}
     Put variables in column @{i}n@{ui}.
     See @{"Declarations" Link "Declarations"}.

@{b}-fc1@{ub}
@{b}-format-first-column-comments@{ub}
     Format comments in the first column.
     See @{"Comments" Link "Comments"}.

@{b}-fca@{ub}
@{b}-format-all-comments@{ub}
     Do not disable all formatting of comments.
     See @{"Comments" Link "Comments"}

@{b}-gnu@{ub}
@{b}-gnu-style@{ub}
     Use GNU coding style.  This is the default.
     See @{"Common styles" Link "Common styles"}.

@{b}-i@{i}n@{ui}@{ub}
@{b}-indent-level@{i}n@{ui}@{ub}
     Set indentation level to @{i}n@{ui} spaces.
     See @{"Indentation" Link "Indentation"}.

@{b}-ip@{i}n@{ui}@{ub}
@{b}-parameter-indentation@{i}n@{ui}@{ub}
     Indent parameter types in old-style function definitions by @{i}n@{ui}
     spaces.
     See @{"Indentation" Link "Indentation"}.

@{b}-kr@{ub}
@{b}-k-and-r-style@{ub}
     Use Kernighan & Ritchie coding style.
     See @{"Common styles" Link "Common styles"}.

@{b}-l@{i}n@{ui}@{ub}
@{b}-line-length@{i}n@{ui}@{ub}
     Set maximum line length to @{i}n@{ui}.
     See @{"Comments" Link "Comments"}.

@{b}-lc@{i}n@{ui}@{ub}
@{b}-comment-line-length@{i}n@{ui}@{ub}
     Set maximum line length for comment formatting to @{i}n@{ui}.
     See @{"Comments" Link "Comments"}.

@{b}-lp@{ub}
@{b}-continue-at-parentheses@{ub}
     Line up continued lines at parentheses.
     See @{"Indentation" Link "Indentation"}.

@{b}-lps@{ub}
@{b}-leave-preprocessor-space@{ub}
     Leave space between @{b}#@{ub} and preprocessor directive.  See @{"Indentation" Link "Indentation"}.

@{b}-nbad@{ub}
@{b}-no-blank-lines-after-declarations@{ub}
     Do not force blank lines after declarations.
     See @{"Blank lines" Link "Blank lines"}.

@{b}-nbap@{ub}
@{b}-no-blank-lines-after-procedures@{ub}
     Do not force blank lines after procedure bodies.
     See @{"Blank lines" Link "Blank lines"}.

@{b}-nbc@{ub}
@{b}-no-blank-lines-after-commas@{ub}
     Do not force newlines after commas in declarations.
     See @{"Declarations" Link "Declarations"}.

@{b}-ncdb@{ub}
@{b}-no-comment-delimiters-on-blank-lines@{ub}
     Do not put comment delimiters on blank lines.
     See @{"Comments" Link "Comments"}.

@{b}-nce@{ub}
@{b}-dont-cuddle-else@{ub}
     Do not cuddle @{b}}@{ub} and @{b}else@{ub}.
     See @{"Statements" Link "Statements"}.

@{b}-ncs@{ub}
@{b}-no-space-after-casts@{ub}
     Do not put a space after cast operators.
     See @{"Statements" Link "Statements"}.

@{b}-nfc1@{ub}
@{b}-dont-format-first-column-comments@{ub}
     Do not format comments in the first column as normal.
     See @{"Comments" Link "Comments"}.

@{b}-nfca@{ub}
@{b}-dont-format-comments@{ub}
     Do not format any comments.
     See @{"Comments" Link "Comments"}.

@{b}-nip@{ub}
@{b}-no-parameter-indentation@{ub}
     Zero width indentation for parameters.
     See @{"Indentation" Link "Indentation"}

@{b}-nlp@{ub}
@{b}-dont-line-up-parentheses@{ub}
     Do not line up parentheses.
     See @{"Statements" Link "Statements"}.

@{b}-npcs@{ub}
@{b}-no-space-after-function-call-names@{ub}
     Do not put space after the function in function calls.
     See @{"Statements" Link "Statements"}.

@{b}-npsl@{ub}
@{b}-dont-break-procedure-type@{ub}
     Put the type of a procedure on the same line as its name.
     See @{"Declarations" Link "Declarations"}.

@{b}-nsc@{ub}
@{b}-dont-star-comments@{ub}
     Do not put the @{b}*@{ub} character at the left of comments.
     See @{"Comments" Link "Comments"}.

@{b}-nsob@{ub}
@{b}-leave-optional-blank-lines@{ub}
     Do not swallow optional blank lines.
     See @{"Blank lines" Link "Blank lines"}.

@{b}-nss@{ub}
@{b}-dont-space-special-semicolon@{ub}
     Do not force a space before the semicolon after certain statements.
     Disables @{b}-ss@{ub}.
     See @{"Statements" Link "Statements"}.

@{b}-nv@{ub}
@{b}-no-verbosity@{ub}
     Disable verbose mode. See @{"Miscellaneous options" Link "Miscellaneous options"}.

@{b}-orig@{ub}
@{b}-original@{ub}
     Use the original Berkeley coding style.
     See @{"Common styles" Link "Common styles"}.

@{b}-npro@{ub}
@{b}-ignore-profile@{ub}
     Do not read @{b}.indent.pro@{ub} files.
     See @{"Invoking indent" Link "Invoking indent"}.

@{b}-pcs@{ub}
@{b}-space-after-procedure-calls@{ub}
     Insert a space between the name of the procedure being called and
     the @{b}(@{ub}.
     See @{"Statements" Link "Statements"}.

@{b}-psl@{ub}
@{b}-procnames-start-lines@{ub}
     Put the type of a procedure on the line before its name.
     See @{"Declarations" Link "Declarations"}.

@{b}-sc@{ub}
@{b}-start-left-side-of-comments@{ub}
     Put the @{b}*@{ub} character at the left of comments.
     See @{"Comments" Link "Comments"}.

@{b}-sob@{ub}
@{b}-swallow-optional-blank-lines@{ub}
     Swallow optional blank lines.
     See @{"Blank lines" Link "Blank lines"}.

@{b}-ss@{ub}
@{b}-space-special-semicolon@{ub}
     On one-line @{b}for@{ub} and @{b}while@{ub} statments, force a blank before the
     semicolon.
     See @{"Statements" Link "Statements"}.

@{b}-st@{ub}
@{b}-standard-output@{ub}
     Write to standard output.
     See @{"Invoking indent" Link "Invoking indent"}.

@{b}-T@{ub}
     Tell @{b}indent@{ub} the name of typenames.
     See @{"Declarations" Link "Declarations"}.

@{b}-ts@{i}n@{ui}@{ub}
@{b}-tab-size@{i}n@{ui}@{ub}
     Set tab size to @{i}n@{ui} spaces.
     See @{"Indentation" Link "Indentation"}.

@{b}-v@{ub}
@{b}-verbose@{ub}
     Enable verbose mode.
     See @{"Miscellaneous options" Link "Miscellaneous options"}.

@{b}-version@{ub}
     Output the version number of @{b}indent@{ub}.
     See @{"Miscellaneous options" Link "Miscellaneous options"}.

Options' Cross Key
------------------

   Here is a list of options alphabetized by long option, to help you
find the corresponding short option.

     --blank-lines-after-block-comments              -bbb
     --blank-lines-after-commas                      -bc
     --blank-lines-after-declarations                -bad
     --blank-lines-after-procedures                  -bap
     --braces-after-if-line                          -bl
     --brace-indent                                  -bli
     --braces-on-if-line                             -br
     --case-indentation                              -cli@{i}n@{ui}
     --comment-delimiters-on-blank-lines             -cdb
     --comment-indentation                           -c@{i}n@{ui}
     --continuation-indentation                      -ci@{i}n@{ui}
     --continue-at-parentheses                       -lp
     --cuddle-else                                   -ce
     --declaration-comment-column                    -cd@{i}n@{ui}
     --declaration-indentation                       -di@{i}n@{ui}
     --dont-break-procedure-type                     -npsl
     --dont-cuddle-else                              -nce
     --dont-format-comments                          -nfca
     --dont-format-first-column-comments             -nfc1
     --dont-line-up-parentheses                      -nlp
     --dont-space-special-semicolon                  -nss
     --dont-star-comments                            -nsc
     --else-endif-column                             -cp@{i}n@{ui}
     --format-all-comments                           -fca
     --format-first-column-comments                  -fc1
     --gnu-style                                     -gnu
     --ignore-profile                                -npro
     --indent-level                                  -i@{i}n@{ui}
     --k-and-r-style                                 -kr
     --leave-optional-blank-lines                    -nsob
     --leave-preprocessor-space                      -lps
     --line-comments-indentation                     -d@{i}n@{ui}
     --line-length                                   -l@{i}n@{ui}
     --no-blank-lines-after-commas                   -nbc
     --no-blank-lines-after-declarations             -nbad
     --no-blank-lines-after-procedures               -nbap
     --no-comment-delimiters-on-blank-lines          -ncdb
     --no-space-after-casts                          -ncs
     --no-parameter-indentation                      -nip
     --no-space-after-function-call-names            -npcs
     --no-verbosity                                  -nv
     --original                                      -orig
     --parameter-indentation                         -ip@{i}n@{ui}
     --procnames-start-lines                         -psl
     --space-after-cast                              -cs
     --space-after-procedure-calls                   -pcs
     --space-special-semicolon                       -ss
     --standard-output                               -st
     --start-left-side-of-comments                   -sc
     --swallow-optional-blank-lines                  -sob
     --tab-size                                      -ts@{i}n@{ui}
     --verbose                                       -v


@EndNode

@Node "Index" "Indent.guide/Index"
@Prev "Option Summary"
@Toc "Main"

Index
*****



 @{" -blank-after-sizeof " Link "Statements"}                  Statements
 @{" -blank-lines-after-commas " Link "Declarations"}            Declarations
 @{" -blank-lines-after-declarations " Link "-bad"}      -bad
 @{" -blank-lines-after-procedures " Link "-bap"}        -bap
 @{" -brace-indentn " Link "Statements"}                       Statements
 @{" -braces-after-if-line " Link "Statements"}                Statements
 @{" -braces-on-if-line " Link "Statements"}                   Statements
 @{" -case-indentationn " Link "Statements"}                   Statements
 @{" -comment-delimiters-on-blank-lines " Link "Comments"}   Comments
 @{" -comment-indentationn " Link "Comments"}                Comments
 @{" -continuation-indentationn " Link "Indentation"}           Indentation
 @{" -continue-at-parentheses " Link "Indentation"}             Indentation
 @{" -cuddle-else " Link "Statements"}                         Statements
 @{" -declaration-comment-columnn " Link "Comments"}         Comments
 @{" -declaration-indentationn " Link "Declarations"}            Declarations
 @{" -dont-break-procedure-type " Link "Declarations"}           Declarations
 @{" -dont-cuddle-else " Link "Statements"}                    Statements
 @{" -dont-format-comments " Link "Comments"}                Comments
 @{" -dont-format-first-column-comments " Link "Comments"}   Comments
 @{" -dont-line-up-parentheses " Link "Indentation"}            Indentation
 @{" -dont-space-special-semicolon " Link "Statements"}        Statements
 @{" -dont-star-comments " Link "Comments"}                  Comments
 @{" -else-endif-columnn " Link "Comments"}                  Comments
 @{" -format-all-comments " Link "Comments"}                 Comments
 @{" -format-first-column-comments " Link "Comments"}        Comments
 @{" -gnu-style " Link "Common styles"}                           Common styles
 @{" -ignore-profile " Link "Invoking indent"}                      Invoking indent
 @{" -indent-leveln " Link "Indentation"}                       Indentation
 @{" -k-and-r-style " Link "Common styles"}                       Common styles
 @{" -leave-optional-blank-lines " Link "Blank lines"}          Blank lines
 @{" -leave-preprocessor-space " Link "Indentation"}            Indentation
 @{" -line-comments-indentationn " Link "Comments"}          Comments
 @{" -line-lengthn " Link "Comments"}                        Comments
 @{" -no-blank-lines-after-commas " Link "Declarations"}         Declarations
 @{" -no-blank-lines-after-declarations " Link "-bad"}   -bad
 @{" -no-blank-lines-after-procedures " Link "-bap"}     -bap
 @{" -no-comment-delimiters-on-blank-lines " Link "Comments"} Comments
 @{" -no-parameter-indentation " Link "Indentation"}            Indentation
 @{" -no-space-after-casts " Link "Statements"}                Statements
 @{" -no-space-after-function-call-names " Link "Statements"}  Statements
 @{" -no-verbosity " Link "Miscellaneous options"}                        Miscellaneous options
 @{" -original " Link "Common styles"}                            Common styles
 @{" -output-file " Link "Invoking indent"}                         Invoking indent
 @{" -parameter-indentationn " Link "Indentation"}              Indentation
 @{" -procnames-start-lines " Link "Declarations"}               Declarations
 @{" -remove-preprocessor-space " Link "Indentation"}           Indentation
 @{" -space-after-cast " Link "Statements"}                    Statements
 @{" -space-after-procedure-calls " Link "Statements"}         Statements
 @{" -space-special-semicolon " Link "Statements"}             Statements
 @{" -standard-output " Link "Invoking indent"}                     Invoking indent
 @{" -star-left-side-of-comments " Link "Comments"}          Comments
 @{" -swallow-optional-blank-lines " Link "Blank lines"}        Blank lines
 @{" -tab-sizen " Link "Indentation"}                           Indentation
 @{" -verbose " Link "Miscellaneous options"}                             Miscellaneous options
 @{" -bad " Link "-bad"}                                 -bad
 @{" -bap " Link "-bap"}                                 -bap
 @{" -bc " Link "Declarations"}                                  Declarations
 @{" -bl " Link "Statements"}                                  Statements
 @{" -blin " Link "Statements"}                                Statements
 @{" -br " Link "Statements"}                                  Statements
 @{" -bs " Link "Statements"}                                  Statements
 @{" -cn " Link "Comments"}                                  Comments
 @{" -cdn " Link "Comments"}                                 Comments
 @{" -cdb " Link "Comments"}                                 Comments
 @{" -ce " Link "Statements"}                                  Statements
 @{" -cin " Link "Indentation"}                                 Indentation
 @{" -clin " Link "Statements"}                                Statements
 @{" -cpn " Link "Comments"}                                 Comments
 @{" -cs " Link "Statements"}                                  Statements
 @{" -dn " Link "Comments"}                                  Comments
 @{" -dce " Link "Statements"}                                 Statements
 @{" -din " Link "Declarations"}                                 Declarations
 @{" -fc1 " Link "Comments"}                                 Comments
 @{" -fca " Link "Comments"}                                 Comments
 @{" -gnu " Link "Common styles"}                                 Common styles
 @{" -in " Link "Indentation"}                                  Indentation
 @{" -ipn " Link "Indentation"}                                 Indentation
 @{" -kr " Link "Common styles"}                                  Common styles
 @{" -ln " Link "Comments"}                                  Comments
 @{" -lp " Link "Indentation"}                                  Indentation
 @{" -lps " Link "Indentation"}                                 Indentation
 @{" -nbad " Link "-bad"}                                -bad
 @{" -nbap " Link "-bap"}                                -bap
 @{" -nbc " Link "Declarations"}                                 Declarations
 @{" -ncdb " Link "Comments"}                                Comments
 @{" -ncs " Link "Statements"}                                 Statements
 @{" -nfc1 " Link "Comments"}                                Comments
 @{" -nfca " Link "Comments"}                                Comments
 @{" -nip " Link "Indentation"}                                 Indentation
 @{" -nlp " Link "Indentation"}                                 Indentation
 @{" -nlps " Link "Indentation"}                                Indentation
 @{" -npcs " Link "Statements"}                                Statements
 @{" -npro " Link "Invoking indent"}                                Invoking indent
 @{" -npsl " Link "Declarations"}                                Declarations
 @{" -nsc " Link "Comments"}                                 Comments
 @{" -nsob " Link "Blank lines"}                                Blank lines
 @{" -nss " Link "Statements"}                                 Statements
 @{" -nv " Link "Miscellaneous options"}                                  Miscellaneous options
 @{" -o " Link "Invoking indent"}                                   Invoking indent
 @{" -orig " Link "Common styles"}                                Common styles
 @{" -pcs " Link "Statements"}                                 Statements
 @{" -psl " Link "Declarations"}                                 Declarations
 @{" -sc " Link "Comments"}                                  Comments
 @{" -sob " Link "Blank lines"}                                 Blank lines
 @{" -ss " Link "Statements"}                                  Statements
 @{" -st " Link "Invoking indent"}                                  Invoking indent
 @{" -T " Link "Declarations"}                                   Declarations
 @{" -tsn " Link "Indentation"}                                 Indentation
 @{" -v " Link "Miscellaneous options"}                                   Miscellaneous options
 @{" -version " Link "Miscellaneous options"}                             Miscellaneous options
 @{" etags requires -psl " Link "Declarations"}                  Declarations
 @{" .indent.pro file " Link "Invoking indent"}                     Invoking indent
 @{" Beginning indent " Link "Invoking indent"}                     Invoking indent
 @{" Berkeley style " Link "Common styles"}                       Common styles
 @{" Blank lines " Link "Blank lines"}                          Blank lines
 @{" Comments " Link "Comments"}                             Comments
 @{" GNU style " Link "Common styles"}                            Common styles
 @{" Initialization file " Link "Invoking indent"}                  Invoking indent
 @{" Invoking indent " Link "Invoking indent"}                      Invoking indent
 @{" Kernighan & Ritchie style " Link "Common styles"}            Common styles
 @{" Long options, use of " Link "Invoking indent"}                 Invoking indent
 @{" Original Berkeley style " Link "Common styles"}              Common styles
 @{" Output File Specification " Link "Invoking indent"}            Invoking indent
 @{" Standard Output " Link "Invoking indent"}                      Invoking indent
 @{" Starting indent " Link "Invoking indent"}                      Invoking indent
 @{" Typenames " Link "Declarations"}                            Declarations
 @{" Using Standard Input " Link "Invoking indent"}                 Invoking indent

@EndNode

