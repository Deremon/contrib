#cmd misc ABOUT - display information about XDME 
#cmd win,misc REDISPLAY - force XDME to redraw the text 
#cmd arexx RXRESULT any - Copy @{B}any@{UB} into RESULT in an AREXX-script. 
#cmd arexx RX - ARexx macro, no args (@{B}RX@{UB} macname) 
#cmd arexx RX1 - ARexx macro, one arg (@{B}RX1@{UB} macname arg1) 
#cmd arexx RX2 - ARexx macro, two args (@{B}RX2@{UB} macname arg1 arg2) 
#cmd arexx PORT name cmd - Send @{B}cmd@{UB} to ARexx-Port @{B}name@{UB} 
#cmd arexx,win SELECT what - make a window the current one. 
#cmd arexx PROJECTINFO - Gives some information about the current project. 
#cmd program,io PROJECTSAVE - Save all window-dimensions, filenames and position of iconified windows. 
#cmd program,io PROJECTLOAD - Recall session 
#cmd prefs,io,requester PATTERN pat - sets the pattern for the filerequesters. 
#cmd requester,io ARPLOAD - NEWFILE with filerequester 
#cmd requester,io ARPINSFILE - INSFILE with filerequester 
#cmd requester,font ARPFONT - SETFONT with fontrequester 
requester,io REQLOAD - NEWFILE with ReqTools filerequester 
requester,io REQINSFILE - INSFILE with ReqTools filerequester 
requester,io REQFONT - SETFONT with ReqTools fontrequester 
#cmd program IF cnd act - if (@{B}cnd@{UB}) @{B}act@{UB} 
#cmd program IFELSE cnd ifact elseact - if (@{B}cnd@{UB}) @{B}ifact@{UB} else @{B}elseact@{UB} 
#cmd program WHILE cnd act -while (@{B}cnd@{UB}) @{B}act@{UB} 
#cmd program REPEAT cnt comm - repeat @{B}comm@{UB} @{B}cnt@{UB} times. 
#cmd program SCANF ctlstr - scan the string at the current text position (C scanf) example: @{B}scanf %s@{UB} 
#cmd stack PUSH item - Push an item on the stack. 
#cmd stack POP item - Pop something from the stack and store it in item. The special item AUTO stores the thing back where it was taken from. 
#cmd stack PICK item - like POP, but doesn't remove the topmost element from stack ! 
#cmd stack PEEK item - like POP, but doesn't remove the topmost element from stack ! 
#cmd stack SWAP item - exchange the topmost item on stack with the actual item 
#cmd prefs MARGIN n - set WordWrap and paragraph formatting margin (related to WORDWRAP and REFORMAT) 
#cmd prefs WORDWRAP what - set word wrap mode (related to MARGIN) 
#cmd searchreplace,prefs GLOBAL what - turn global search on/off. If XDME cannot find a string in one window, it will continue with the next one. 
#cmd prefs SETPARCOL col - Set the LEFT margin for word wrap mode paragraphing & reformat. MUST be less than MARGIN. 
#cmd prefs TABSTOP n - Set tab stops every @{B}n@{UB}. does not effect text load. 
#cmd prefs INSERTMODE what - set INSERTMODE. 
#cmd prefs,io CHFILENAME name - change the name of the working file 
#cmd prefs SAVETABS what - Optimize file saves by crunching spaces to tabs. The default is OFF. 
#cmd prefs SETFONT font sz - Set the window's font. @{B}setfont topaz 11@{UB} 
#cmd prefs IGNORECASE what -set case ignore for seaches. 
#cmd prefs,io SAVECONFIG -save current editor configuration to @{I}s:XDME.prefs@{UI} 
#cmd prefs FGPEN pen - Set pen for text 
#cmd prefs TFPEN pen - set pen for title bar text 
#cmd prefs TBPEN pen - set pen for title bar background 
#cmd prefs BGPEN pen - set background pen for text 
#cmd prefs HGPEN pen - set highlight (block) pen 
#cmd prefs BBPEN pen - selects @{B}pen@{UB} as the block-background-pen 
#cmd prefs MODIFIED what - set modified flag manually (what={on,off,toggle}) 
#cmd prefs AUTOINDENT what - (De)Activate autoindent with RETURN 
#cmd prefs,win SIZEWINDOW geo - change size and position of the current window to @{B}geo@{UB} 
#cmd prefs AUTOSPLIT what - (De)Activate autosplit. This is an alternative to WORDWRAP. AUTOSPLIT only breaks the line if it gets too long and doesn't touch the rest of the text. 
#cmd prefs TASKPRI n - Set the priority of XDME to @{B}n@{UB} (-5..5) 
#cmd prefs DEBUG what - @{U}For programmers only@{UB} Allows to set a flag for testing code 
#cmd prefs DOBACKUP what - specifies if XDME creates a .bak file before actually saving the text 
#cmd prefs,block AUTOUNBLOCK what - clear old selection when a new block is defined (on) or give an error 
#cmd prefs FOLLOWCURSOR what - XDME will make sure the cursor is visible if you switch it on with this command. Usefull on screens that extend over the visual area. 
#cmd prefs NICEPAGING what - Should @{B}PAGEUP@{UB} and @{B}PAGEDOWN@{UB} scroll the page immediately (@{B}on@{UB}) or jump to the border first 
#cmd prefs ICONACTIVE what - Should XDME activate the iconified window 
#cmd prefs BLOCKENDSFLOAT what - Should @{B}BSTART@{UB} always appear above @{B}BEND@{UB} (@{B}on@{UB}) or remain static 
#cmd prefs SLINE what - Should XDME not allow to go beyond the end of line and preserve the length of lines (default: no) 
#cmd prefs SPACING n - Insert a gap of @{B}n@{UB} pixels between lines 
#cmd textedit BACK - backspace, (delete char to left of cursor) 
#cmd textedit BS - backspace, (delete char to left of cursor) 
#cmd textedit DEL - delete, (deletes char under cursor) 
#cmd textedit REMEOL - Remove text under and beyond the cursor. 
#cmd textedit SPLIT - Split line at cursor 
#cmd textedit JOIN - join next line to line at cursor 
#cmd textedit,format REFORMAT - reformat paragraph using the margin. 
#cmd textedit INSLINE - insert line 
#cmd textedit DELINE - delete line 
#cmd textedit TLATE how - Modify character under cursor. 
#cmd textedit,format JUSTIFY how - simple text justification. 
#cmd textedit UNJUSTIFY - removes extra spaces in a line 
#cmd textedit INDENT what how - indent text. @{B}what@{UB} specifies what to indent and @{B}how@{UB} how to indent it. 
#cmd textedit INSLINES n - insert @{B}n@{UB} lines at once 
DELETE - delete characters upto the next blank (if on a blank) or to the next non-blank (if on non-blank) 
#cmd textedit DELINES n - delete @{B}n@{UB} lines 
#cmd misc UNDELINE - insert most recently deleted line (only last line saved) 
#cmd block,clip CLIPINS - Insert current contents of clipboard in the text 
SPACE - inserts a single space no matter what insertmode is set to 
#cmd textedit,movement RETURN - if AUTOINDENT is off: (FIRST DOWNADD) else insert line, split current line and indent like last line above. 
#cmd misc UNDO - undo current line (must be mapped to a key to work) 
#cmd movement MAKECURSORVISIBLE - Scrolls an oversized screen so the cursor will become visible. 
#cmd win ICONIFY - iconify the window 
#cmd prefs,win SETDEFICONTITLE string - Sets the pattern for the window-title when iconifed 
#cmd win UNICONIFY - uniconify the window 
#cmd win NEWWINDOW - open new window using default window parameters 
#cmd win OPENWINDOW geo -open new window using specified geometry. 
#cmd prefs,win SETDEFTITLE string - Sets the pattern for the window-title. 
#cmd prefs,win RESIZE cols rows -Resize current window. E.G: (@{B}resize 70 23@{UB}) 
#cmd prefs,win TITLE title - set window title manually 
#cmd win SHOWLOG - XDME collects all warnings internally. These can now be showed again with this command. 
#cmd win SETGEOMETRY x y width height - Set x/y position and width/height of XDME's window. 
#cmd win TOBACK - Move active window to back 
#cmd win TOFRONT - Move active window to front 
#cmd movement TOMOUSE - moves cursor to mouse position 
#cmd prefs PUBSCREEN name - open next window on screen @{B}name@{UB}. Use an empty string to turn it off (ie. "pubscreen `'") 
#cmd prefs,refs ADDPATH path - Add the specified symbolic directory to XDME's special search path (see REF and CTAGS). 
#cmd prefs,refs REMPATH wild - Remove a directorys from XDME's special path. 
#cmd refs REFCTAGS - The utimate command for hopping through source. First, we try CTAGS and if we don't find anything, we check REF. 
#cmd refs VREFCTAGS name - like REFCTAGS, but looks for @{B}name@{UB} 
#cmd refs CTAGS - search for the tag under the cursor (see below) 
#cmd refs VCTAGS name - search for tag @{B}name@{UB} 
#cmd refs REF - reference string under cursor (see below) 
#cmd refs VREF name - reference @{B}name@{UB} 
#cmd searchreplace FINDSTR string - Set the search string pattern 
#cmd searchreplace REPSTR string - SET the replace string pattern 
#cmd searchreplace FINDR s1 s2 - Set find and replace patterns and do one find&replace. 
#cmd searchreplace NEXTR - find next occurance and replace 
#cmd searchreplace PREVR - find previous occurance and replace 
#cmd searchreplace FIND string - Set the search pattern to @{B}string@{UB} and do a NEXT 
#cmd searchreplace NEXT - find next occurance of search pattern 
#cmd searchreplace PREV - find previous occurance of search pattern 
#cmd searchreplace REPLACE - replaces the next strlen(findstr) chars with repstr 
#cmd prefs,block BLOCKTYPE type - @{B}type@{UB} is LINE (old), CHARACTER (like everywhere else) or VERTICAL (rectangular block). 
#cmd block BLOCK - Set start or end (if start is already set) of block 
#cmd block BSTART - Set start of block 
#cmd block BEND - Set end of block 
#cmd block UNBLOCK - clear the block markers for the current window 
#cmd block LINEBLOCK - mark the current line 
#cmd block,clip COPY - copy currently marked text into clipboard 
#cmd block BDELETE - delete currently marked text 
BCOPY - insert currently marked text before cursor 
#cmd block BMOVE - delete currently marked text and insert it before cursor line 
#cmd block,source BSOURCE - execute currently marked text block as if it were a script file 
#cmd movement UP -cursor up. If in commandline, move to previous line of commandline-history 
#cmd movement SCROLLDOWN - Scroll down without moving cursor 
#cmd movement SCROLLUP - Scroll up without moving cursor 
#cmd movement DOWN - cursor down. If in commandline move to next line of commandline-history 
#cmd movement PAGEDOWN - pagedown a partial page (see PAGESET) 
#cmd movement PAGELEFT - page to the left as requested by StyleGuide. 
#cmd movement PAGERIGHT - dito to the right 
#cmd movement PAGEUP - pageup a partial page (see PAGESET) 
#cmd prefs PAGESET n -@{B}n@{UB} PERCENT (0 to 100). page step size relative to the current number of rows in the window. 
#cmd textedit,movement DOWNADD - cursor down. If at bottom of text, add a line. 
#cmd movement LEFT - cursor left 
#cmd movement RIGHT - cursor right 
#cmd movement TAB - forward tab 
#cmd movement BACKTAB - backward tab 
#cmd movement TOP - Move to Top of File 
#cmd movement BOTTOM - Move to Bottom of File 
#cmd movement FIRST - move to column 1 
#cmd movement FIRSTNB - Move to first non-blank in line. 
#cmd movement LAST - move one beyond the last non-space in a line. 
#cmd movement GOTO dest - Goto to a position in the text. 
#cmd movement SCREENTOP - Move cursor to the top of the screen 
#cmd movement SCREENBOTTOM - Move cursor to the bottom of the screen. 
#cmd movement WLEFT - move to beginning of previous word. If in the middle of a word, move to beginning of current word. 
#cmd movement WRIGHT - move to beginning of next word 
#cmd movement COL n - Move cursor to column @{B}n@{UB} or @{B}n@{UB} characters left (@{B}-n@{UB}) or right (@{B}+n@{UB}) 
#cmd movement SCROLLLEFT - Scroll left without moving cursor 
#cmd movement SCROLLRIGHT - Scroll right without moving cursor 
#cmd movement MATCH - find matching paren. Works with (), [], {}, `' and C-comments 
#cmd movement PING n - set a text marker (@{B}n@{UB} = 0-9). 
#cmd movement PONG n - move to a previously set text marker (@{B}n@{UB} = 0-9) 
#cmd misc RECALL - recall most recently entered command. Must be used from a keymap (c-esc). 
#cmd misc ESC - toggle manual command entry mode 
#cmd misc ESCIMM arg - go into command entry mode prompting with @{B}arg@{UB} 
#cmd misc NULL - no operation 
#cmd misc NOP - no operation 
#cmd misc REM com - add commend 
#cmd program,io SOURCE file - source a script file. '#' in first column for comment 
#cmd win QUIT - close current window. If text was modified, a safety check is performed 
#cmd misc QUITALL - leave XDME. If any text was modified, a safety check is performed for that text 
#cmd misc,io,program EXECUTE comm - Execute a CLI command. 
#cmd io NEWFILE name - replace current text with new file 
#cmd textedit,io INSFILE name - insert a file into the current text. 
#cmd io APPENDSAVE file - Append current text to @{B}file@{UB} 
#cmd io,block BAPPENDSAVE file - Append currently marked text to @{B}file@{UB} 
#cmd block,io BSAVE file - save the block to @{B}file@{UB} 
#cmd block,requester,io BARPSAVE - save the block to a file with filerequester 
#cmd io SAVEOLD - save current text under current name 
#cmd io SAVEAS file - save current text under a different name (title line name does change) 
#cmd io WRITETO file - write text to this file. The current name of the text is not changed. 
#cmd requester,io ARPSAVE - SAVEAS with filerequester 
requester,io REQSAVE - SAVEAS with ReqTools filerequester 
#cmd io CD dir - set directory of current window to @{B}dir@{UB} 
#cmd misc,io PRINT text - Print @{B}text@{UB} to the shell XDME was started in 
#cmd requester REQSTRING title format gadgets defvalue - display a synchron ReqTools StringRequest; the result is put in $REQRESULT. 
#cmd requester REQNUMBER title format gadgets defvalue min max - display a synchron ReqTools NumberRequest; the result is put in $REQRESULT. 
#cmd requester REQPALETTE title defvalue - display a synch ReqTools PaletteRequest; the result is put in $REQRESULT. 
#cmd requester REQUEST title body gadgets - display a synch ReqTools EZRequest; the result is put in $REQRESULT. 
#cmd requester REQFILE title flags defvalue - display a synch ReqTools FileRequest; the result is put in $REQRESULT. 
#commandshell CLOSECMDSHELL - close the command shell 
#commandshell OPENCMDSHELL - open the command shell with the filename in $CMDSHELLNAME 
#commandshell CMDSHELLOUT txt - output a string to the command shell 
#cmd misc ABORT - abort the current command execution 
#cmd misc UNABORT - make a previous ABORT or error unseen; that command can only be used in ARexx scripts 
#cmd misc BREAK - break the current command loop 
#cmd misc CONTINUE - break the current turn of the current command loop 
#cmd misc EVAL command - reinvoke the command interpreter;that command can b used to prevent "too many arguments" errors, which occurs, if the user has specified too many variable arguments at the same execution level 
#cmd misc FORCE flags command - similar to EVAL, but according to flags it can ignore errorvalues (F), disable screenupdates (S) or errorrequesters (R) or title updates (T) or activate Debug Mode (D) 
#cmd misc QUIET command - short for "FORCE S command" 
OVERWRITE text - write some text in overwrite mode ignoring $INSERTMODE 
INSERT text - write some text in insert mode ignoring $INSERTMODE 
PRINTF format args - write some text w/ printf formatting 
#cmd math MATH1 arg1 arg2 - long version for NOT INC NEG DEC; $INFIXMODE decides if arg1 or arg2 is operator, the other arg is variablename 
#cmd math MATH2 arg1 arg2 arg3 - long version for MUL MOD DIV SUB ADD; $INFIXMODE decides if arg1 or arg2 is operator, the other arg is variablename 
#cmd vars,math INC varname - increment the named variable 
#cmd vars,math DEC varname - decrement the named variable 
#cmd vars,math NEG varname - make the named variable negative 
#cmd vars,math NOT varname - invert the named variable 
#cmd vars,math ADD varname value - increase the named variable by the given value 
#cmd vars,math SUB varname value - decrease the named variable by the given value 
#cmd vars,math MUL varname value - multiply the named variable with the given value 
#cmd vars,math MOD varname value - modulo divide the named variable by the given value 
#cmd vars,math DIV varname value - divide the named variable by the given value 
#cmd vars SWAPV varname1 varname2 - try to swap the contents of 2 variables 
#cmd recorder RECSTART - start the macro recorder 
#cmd recorder RECEND - terminate the macro recorder, if it is running 
#cmd recorder RECPLAY - replay the previously recorded macro 
#cmd recorder RECSAVE filename - save the previously recorded macro as a XDME script 
#cmd macros SIMPTR x y - simulate the mouse being at windowpos x/y; that command is needed to replay saved macros, it is not helpful in any other situation 
#cmd aliases,vars SMV name value - create or redefine a macrolocal variable (same as SETMACROVAR) 
#cmd aliases,vars SETMACROVAR name value - create or redefine a macrolocal variable (same as SMV) 
#cmd aliases,vars UNSETMACROVAR name - delete a macrolocal variable 
#cmd aliases RET - return from a macro (before reaching its end) 
#cmd aliases SETMACRO name nargs body - create or redefine a commandmacro 
#cmd aliases UNSETMACRO name - delete a commandmacro 
#cmd aliases MACROSAVE filename - save all commandmacros into a file 
#cmd aliases MACROLOAD name -  load commandmacros from a file 
READTEMPLATE filename - read in a file and replace all occurencies of $(varname) with the contents of that varname 
#cmd varstack PUSHVAR varname - put a variable onto the variable stack 
#cmd varstack DROPVAR varname - drop the first entry of a variable from the variable stack 
#cmd varstack PICKVAR varname - get a variable from the variable stack without modifying the stack 
#cmd varstack PURGEVAR varname - remove all occurencies of a variable from the variable stack 
#cmd varstack POPVAR varname - get a variable from the variable stack and remove it 
#cmd varstack SWAPVAR varname - swap te contents of a variable with that of its 1st entry in the variable stack 
