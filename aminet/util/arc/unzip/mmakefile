####################################################################
####################################################################
############# THIS IS A GENERATED FILE ! DO NOT EDIT ###############
####################################################################
####################################################################
#   $Id$
#
#   Makefile to make FileMaster.

include $(TOP)/config/make.cfg

FILES := unzip crypt envargs explode extract file_io inflate match\
unreduce unshrink zipinfo unix


EXEDIR := $(CONTRIBDIR)/aminet
EXE := $(EXEDIR)/unzip

USE_AROSLIB := yes
USE_CLIB_SHARED := yes
USE_AMIGALIB := yes
USE_MLIB := yes

USER_CFLAGS := -DUNIX -DNO_ZIPINFO

#MM aminet-util-arc-unzip : includes linklibs

.PHONY : aminet-util-arc-unzip aminet-util-arc-unzip-clean aminet-util-arc-unzip-quick
#MM
aminet-util-arc-unzip-clean : clean
#MM
aminet-util-arc-unzip-quick : aminet-util-arc-unzip

# This will prevent the make_common_setup defines from taking effect
CFLAGS  := $(TARGET_CFLAGS) $(USER_CFLAGS) $(STATIC_CFLAGS) -I$(AROS_INCLUDES) -D__AROS -D__AROS__
LDFLAGS := $(TARGET_LDFLAGS) $(STATIC_LDFLAGS) $(USER_LDFLAGS)

ifndef OBJDIR
OBJDIR := $(GENDIR)/$(CURDIR)
endif

ifndef CFLAGS
CFLAGS := $(USER_CFLAGS) $(TARGET_CFLAGS) $(INCLUDES) -I$(AROS_INCLUDES) -D__AROS__ -D__AROS
endif

ifndef AFLAGS
AFLAGS := $(USER_AFLAGS) $(TARGET_AFLAGS) $(INCLUDES) -I$(AROS_INCLUDES) -D__AROS__ -D__AROS
endif

ifndef LDFLAGS
LDFLAGS := $(USER_LDFLAGS) $(TARGET_LDFLAGS)
endif



LIBS := -L$(LIBDIR) 
DEPLIBS :=
STARTUP := $(LIBDIR)/startup.o
ifdef USE_AROSLIB
LIBS := $(LIBS) -larossupport
DEPLIBS := $(DEPLIBS) $(LIBDIR)/libarossupport.a
endif
ifdef USE_AMIGALIB
LIBS := $(LIBS) -lamiga
DEPLIBS := $(DEPLIBS) $(LIBDIR)/libamiga.a
endif
ifdef USE_ZLIB
LIBS := $(LIBS) -larosz
DEPLIBS := $(DEPLIBS) $(LIBDIR)/libarosz.a
endif
ifdef USE_COOLIMAGESLIB
LIBS := $(LIBS) -lcoolimages
DEPLIBS := $(DEPLIBS) $(LIBDIR)/libcoolimages.a
endif
ifdef USE_BGUILIB
LIBS := $(LIBS) -lbgui
DEPLIBS := $(DEPLIBS) $(LIBDIR)/libbgui.a
endif
ifdef USE_REQTOOLSLIB
LIBS := $(LIBS) -lreqtoolsstubs
DEPLIBS := $(DEPLIBS) $(LIBDIR)/libreqtoolsstubs.a
endif
ifdef USE_CLIB

# uncomment this if you want to compile by default
# against the shared version of the clib
LIBS := $(LIBS) -larosc_shared
DEPLIBS := $(DEPLIBS) $(LIBDIR)/libarosc_shared.a

# uncomment this if you want to compile by default
# against the static version of the clib
# LIBS := $(LIBS) -larosc
# DEPLIBS := $(DEPLIBS) $(LIBDIR)/libarosc.a
else
    ifdef USE_CLIB_SHARED
	LIBS := $(LIBS) -larosc_shared
	DEPLIBS := $(DEPLIBS) $(LIBDIR)/libarosc_shared.a
    else
	ifdef USE_CLIB_STATIC
		LIBS := $(LIBS) -larosc
		DEPLIBS := $(DEPLIBS) $(LIBDIR)/libarosc.a
	endif
    endif
endif
ifdef USE_MLIB
LIBS := $(LIBS) -larosm
DEPLIBS := $(DEPLIBS) $(LIBDIR)/libarosm.a
endif

# These must always be linked
LIBS := $(LIBS) -lautoinit
DEPLIBS := $(DEPLIBS) $(LIBDIR)/libautoinit.a

LIBS := $(LIBS) 



aminet-util-arc-unzip : setup $(EXE)

OBJS := $(foreach f,$(FILES),$(OBJDIR)/$(f).o)
DEPS := $(foreach f,$(FILES),$(OBJDIR)/$(f).d)

$(OBJDIR)/%.o : %.c
		@$(ECHO) "Compiling $(CURDIR)/$(notdir $<)..."
	@$(IF) $(TARGET_CC) $(CFLAGS) -c $< -o $@ > $(GENDIR)/cerrors 2>&1 ; then \
	    $(IF) $(TEST) -s $(GENDIR)/cerrors ; then \
		$(ECHO) "$(CURDIR)/$<: $(TARGET_CC) $(CFLAGS) -c $< -o $@" >> $(GENDIR)/errors ; \
		$(CAT) $(GENDIR)/cerrors >> $(GENDIR)/errors ; \
	    else \
		$(NOP) ; \
	    fi ; \
	else \
	    $(ECHO) "Compile failed: $(TARGET_CC) $(CFLAGS) -c $< -o $@" 1>&2 ; \
	    tee < $(GENDIR)/cerrors -a $(GENDIR)/errors 1>&2 ; \
	    exit 1 ; \
	fi


$(OBJDIR)/%.d : %.c
		@$(IF) [ ! -d $(@D) ]; then $(MKDIR) $(@D) ; else $(NOP) ; fi
	@$(ECHO) "Makedepend $(CURDIR)/$<..."
	@$(MKDEPEND) $(CFLAGS) $< -o $@


$(EXEDIR)/% : $(STARTUP) $(DEPLIBS)

setup ::
		@$(FOR) dir in $(OBJDIR) $(EXEDIR) ; do \
	    $(IF) $(TEST) ! -d $$dir ; then $(MKDIR) $$dir ; else $(NOP) ; fi ; \
	done


clean ::
	-@$(RM) $(OBJDIR)



$(EXE) : $(EXEDIR)/% : $(OBJS)
		@$(ECHO) "Linking $@..."
	@$(IF) $(STATIC_LD) $(LDFLAGS) $(STARTUP) $^ -o $@ $(LIBS) $() 2>&1 > $(GENDIR)/cerrors 2>&1 ; then \
		$(IF) $(TEST) -s $(GENDIR)/cerrors ; then \
				$(ECHO) "$@: $(STATIC_LD) $(LDFLAGS) $(STARTUP) $^ -o $@ $(LIBS) $()" >> $(GENDIR)/errors ; \
				$(CAT) $(GENDIR)/cerrors >> $(GENDIR)/errors ; \
	   	else \
			$(NOP) ; \
    	fi ; \
	else \
	    $(ECHO) "Link failed: $(STATIC_LD) $(LDFLAGS) $(STARTUP) $^ -o $@ $(LIBS) $()" 1>&2 ; \
	    tee < $(GENDIR)/cerrors -a $(GENDIR)/errors 1>&2 ; \
	    exit 1 ; \
	fi



# Delete generated makefiles
#MM
clean ::
	@$(RM) $(TOP)/$(CURDIR)/mmakefile $(TOP)/$(CURDIR)/mmakefile.bak

# Include these files but only if the current target is neither
# setup nor clean.
ifeq (,$(filter clean% %clean %clean% setup% includes% ,$(TARGET)))
-include $(DEPS)
endif
