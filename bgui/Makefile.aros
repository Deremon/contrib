TOP = ../..

#include $(TOP)/config/make.cfg

ver=41
o=+$(BUILD_TYPE).o
DEBUG_OPTIONS=
STANDARD_OPTIONS=
ENHANCED_OPTIONS=-DENHANCED

CC = gcc
LD = ld
CP = cp
RM = rm
#DEFINES should really not define ENHANCED but for AROS it's fine.
DEFINES = -D_AROS -DENHANCED
MAKE = make
ECHO = echo

BINDIR = $(TOP)/bin/linux-i386/AROS
LIBDIR = $(TOP)/bin/linux-i386/AROS/lib

OS_INCLUDES_DIR = $(BINDIR)/Include
INCLUDES_DIR = $(BINDIR)/Include

OS_INCLUDES = -I$(OS_INCLUDES_DIR)
USER_INCLUDES = -I. -I$(INCLUDES_DIR)


INCLUDES = $(USER_INCLUDES) $(OS_INCLUDES)

CFLAGS = $(INCLUDES)

INCLUDE_FILES = \
	o/bgui.library_rev.h \
	$(INCLUDES_DIR)/libraries/bgui.h \
	$(INCLUDES_DIR)/libraries/bgui_macros.h \
	$(INCLUDES_DIR)/bgui/bgui.h \
	$(INCLUDES_DIR)/bgui/bgui_image.h \
	$(INCLUDES_DIR)/bgui/bgui_locale.h \
	$(INCLUDES_DIR)/bgui/bgui_asl.h \
	$(INCLUDES_DIR)/bgui/bgui_arexx.h \
	$(INCLUDES_DIR)/bgui/bgui_cx.h \
	$(INCLUDES_DIR)/bgui/bgui_obsolete.h \
	$(INCLUDES_DIR)/bgui/bgui_macros.h \
	$(INCLUDES_DIR)/bgui/bgui_proto.h \
	$(INCLUDES_DIR)/bgui/bgui_pragmas.h \
	$(INCLUDES_DIR)/pragma/bgui_lib.h \
	$(INCLUDES_DIR)/bgui/bgui_lib.fd \
	$(INCLUDES_DIR)/clib/bgui_protos.h \
	$(INCLUDES_DIR)/defines/bgui.h \
	$(INCLUDES_DIR)/proto/bgui.h


standard_build :
	@$(ECHO) "Making BGUI standard version..."
	@$(MAKE) -f Makefile.aros BUILD_TYPE=S build

enhanced_build:
	@$(ECHO) "Making BGUI enhanced version..."
	@$(MAKE) -f Makefile.aros BUILD_TYPE=E build

build: bin/bgui.library.$(BUILD_TYPE) test 
#examples tools

bin/test1: test/test1.c
	@$(ECHO) Making $@...
	@$(MAKE) -Ctest -fMakefile.aros test1

bin/test2: test/test2.c
	@$(ECHO) Making $@...
	@$(MAKE) -Ctest -fMakefile.aros test2

bin/test3: test/test3.c
	@$(ECHO) Making $@...
	@$(MAKE) -Ctest -fMakefile.aros test3

bin/test4: test/test4.c
	@$(ECHO) Making $@...
	@$(MAKE) -Ctest -fMakefile.aros test4

bin/test5: test/test5.c
	@$(ECHO) Making $@...
	@$(MAKE) -Ctest -fMakefile.aros test5

bin/test6: test/test6.c
	@$(ECHO) Making $@...
	@$(MAKE) -Ctest -fMakefile.aros test6

bin/test7: test/test7.c
	@$(ECHO) Making $@...
	@$(MAKE) -Ctest -fMakefile.aros test7

bin/test8: test/test8.c
	@$(ECHO) Making $@...
	@$(MAKE) -Ctest -fMakefile.aros test8

bin/test9: test/test9.c
	@$(ECHO) Making $@...
	@$(MAKE) -Ctest -fMakefile.aros test9

bin/test10: test/test10.c
	@$(ECHO) Making $@...
	@$(MAKE) -Ctest -fMakefile.aros test10

bin/test11: test/test11.c
	@$(ECHO) Making $@...
	@$(MAKE) -Ctest -fMakefile.aros test11

bin/test13: test/test13.c
	@$(ECHO) Making $@...
	@$(MAKE) -Ctest -fMakefile.aros test13


test = \
bin/test1 \
bin/test2 \
bin/test3 \
bin/test4 \
bin/test5 \
bin/test6 \
bin/test7 \
bin/test8 \
bin/test9 \
bin/test10 \
bin/test11 \
bin/test13

test: $(INCLUDE_FILES) $(test)

OBJECTS =  \
	o/plmain$(o) \
	o/plboopsi$(o) \
	o/plgfx$(o) \
	o/plgroupclasses$(o) \
	o/plimageclasses$(o) \
	o/plgadgetclasses$(o) \
	o/plaslclasses$(o) 



all: makedirs \
	$(INCLUDE_FILES) \
	$(OBJECTS)


clean:
	$(RM) $(INCLUDE_FILES) o/*.o
	

makedirs : 
	mkdir -p $(INCLUDES_DIR)
	mkdir -p $(INCLUDES_DIR)/libraries
	mkdir -p $(INCLUDES_DIR)/bgui
	mkdir -p $(INCLUDES_DIR)/pragma

o/bgui.library_rev.h: bgui.library_rev.rev
	@$(CP) bgui.library_rev.rev o/bgui.library_rev.h

$(INCLUDES_DIR)/libraries/bgui.h : include/libraries_bgui.h
	$(CP) include/libraries_bgui.h $@

$(INCLUDES_DIR)/libraries/bgui_macros.h : include/libraries_bgui_macros.h
	$(CP) include/libraries_bgui_macros.h $@

$(INCLUDES_DIR)/bgui/bgui.h : include/bgui.h
	$(CP) include/bgui.h $@

$(INCLUDES_DIR)/bgui/bgui_image.h : include/bgui_image.h
	$(CP) include/bgui_image.h $@

$(INCLUDES_DIR)/bgui/bgui_locale.h : include/bgui_locale.h
	$(CP) include/bgui_locale.h $@

$(INCLUDES_DIR)/bgui/bgui_asl.h : include/bgui_asl.h
	$(CP) include/bgui_asl.h $@

$(INCLUDES_DIR)/bgui/bgui_arexx.h : include/bgui_arexx.h
	$(CP) include/bgui_arexx.h $@

$(INCLUDES_DIR)/bgui/bgui_cx.h : include/bgui_cx.h
	$(CP) include/bgui_cx.h $@

$(INCLUDES_DIR)/bgui/bgui_obsolete.h : include/bgui_obsolete.h
	$(CP) include/bgui_obsolete.h $@

$(INCLUDES_DIR)/bgui/bgui_macros.h : include/bgui_macros.h
	$(CP) include/bgui_macros.h $@

$(INCLUDES_DIR)/bgui/bgui_proto.h : include/bgui_proto.h
	$(CP) include/bgui_proto.h $@

$(INCLUDES_DIR)/bgui/bgui_pragmas.h : include/bgui_pragmas.h
	$(CP) include/bgui_pragmas.h $@

$(INCLUDES_DIR)/pragma/bgui_lib.h : include/pragma/bgui_lib.h
	$(CP) include/pragma/bgui_lib.h $@

$(INCLUDES_DIR)/bgui/bgui_lib.fd : include/bgui_lib.fd
	$(CP) include/bgui_lib.fd $@

$(INCLUDES_DIR)/clib/bgui_protos.h : include/aros/bgui_protos_clib.h
	$(CP) include/aros/bgui_protos_clib.h $@

$(INCLUDES_DIR)/defines/bgui.h : include/aros/bgui_defines.h
	$(CP) include/aros/bgui_defines.h $@

$(INCLUDES_DIR)/proto/bgui.h : include/bgui_proto_aros.h
	$(CP) $^ $@

bin/bgui.library.$(BUILD_TYPE) : o/libtag.o \
		o/plmain$(o) \
		o/plgfx$(o) \
		o/plboopsi$(o) \
		o/plimageclasses$(o) \
		o/plgadgetclasses$(o) \
		o/plgroupclasses$(o) \
		o/plaslclasses$(o)
#	if ($(BUILD_TYPE) eq D)
	@$(CC) $(DEBUG_OPTIONS) $(DEFINES) -c ver.c -o o/ver.o
#	endif
#	ifeq ($(BUILD_TYPE),S)
#	@$(CC) $(STANDARD_OPTIONS) $(DEFINES) -c ver.c -o o/ver.o
#	endif
#	ifeq ($(BUILD_TYPE),E)
#	@$(CC) $(ENHANCED_OPTIONS) $(DEFINES) -c ver.c -o o/ver.o
#	endif
	@$(ECHO) Linking $@...
	@$(LD) o/libtag.o o/ver.o o/plmain$(o) o/plgfx$(o) o/plboopsi$(o) \
	      o/plimageclasses$(o) o/plgadgetclasses$(o) o/plaslclasses$(o) \
	      o/plgroupclasses$(o) -L$(LIBDIR) -laros -lamiga -o $@

main_o=o/lib$(o) o/libfunc$(o) o/task$(o) o/request$(o) \
	o/misc$(o) o/bgui_locale$(o) o/miscc$(o) 
#o/stkext$(o)

boopsi_o=o/classes$(o) o/dgm$(o) o/rootclass$(o)
#o/arexxclass$(o)

gfx_o=o/gfx$(o) o/blitter$(o) o/textclass$(o) o/strformat$(o)

group_o=o/windowclass$(o) o/groupclass$(o) o/spacingclass$(o) o/pageclass$(o) \
   o/viewclass$(o) o/externalclass$(o)

image_o=o/frameclass$(o) o/labelclass$(o) o/separatorclass$(o) o/vectorclass$(o) o/systemiclass$(o)

gadget_o=o/baseclass$(o) o/areaclass$(o) o/buttonclass$(o) \
   o/checkboxclass$(o) o/commodityclass$(o) o/cycleclass$(o) o/indicatorclass$(o) \
   o/infoclass$(o) o/listclass$(o) o/mxclass$(o) o/progressclass$(o) o/propclass$(o) \
   o/sliderclass$(o) o/stringclass$(o) o/radiobuttonclass$(o)

asl_o=o/aslreqclass$(o) o/filereqclass$(o) o/fontreqclass$(o) o/screenreqclass$(o)

o/plmain$(o): $(main_o)
	@echo "Linking $@..."
	@$(RM) -f $@
	@$(LD) -r $(main_o) -o $@ 

o/plboopsi$(o): $(boopsi_o)
	@echo "Linking $@..."
	@$(RM) -f $@
	@$(LD) -r $(boopsi_o) -o $@

o/plgfx$(o): $(gfx_o)
	@echo "Linking $@..."
	@$(RM) -f $@
	@$(LD) -r $(gfx_o) -o $@

o/plgroupclasses$(o): $(group_o)
	@echo "Linking $@..."
	@$(RM) -f $@
	@$(LD) -r $(group_o) -o $@

o/plimageclasses$(o) : $(image_o)
	@echo "Linking $@..."
	@$(RM) -f $@
	@$(LD) -r $(image_o) -o $@

o/plgadgetclasses$(o) : $(gadget_o)
	@echo "Linking $@..."
	@$(RM) -f $@
	@$(LD) -r $(gadget_o) -o $@

o/plaslclasses$(o) : $(asl_o)
	@echo "Linking $@..."
	@$(RM) -f $@
	@$(LD) -r $(asl_o) -o $@

o/libtag.o: libtag.c
	$(CC) $(INCLUDES) -c $^ -o $@


o/lib$(o): lib.c
	$(CC) $(CFLAGS) $(DEFINES) -c lib.c -o $@ 2>&1|tee $@.err

o/libfunc$(o): libfunc.c
	$(CC) $(CFLAGS) $(DEFINES) -c libfunc.c -o $@ 2>&1|tee $@.err

o/task$(o): task.c
	$(CC) $(CFLAGS) $(DEFINES) -c task.c -o $@ 2>&1|tee $@.err

o/request$(o): request.c
	$(CC) $(CFLAGS) $(DEFINES) -c request.c -o $@ 2>&1|tee $@.err

o/misc$(o): misc.c
	$(CC) $(CFLAGS) $(DEFINES) -c misc.c -o $@ 2>&1|tee $@.err

o/bgui_locale$(o): bgui_locale.c
	$(CC) $(CFLAGS) $(DEFINES) -c bgui_locale.c -o $@ 2>&1|tee $@.err

o/miscc$(o): miscc.c
	$(CC) $(CFLAGS) $(DEFINES) -c miscc.c -o $@ 2>&1|tee $@.err

o/stkext$(o): stkext.c
	$(CC) $(CFLAGS) $(DEFINES) -c miscc.c -o $@ 2>&1|tee $@.err


o/classes$(o): classes.c
	$(CC) $(CFLAGS) $(DEFINES) -c classes.c -o $@ 2>&1|tee $@.err

o/dgm$(o): dgm.c
	$(CC) $(CFLAGS) $(DEFINES) -c dgm.c -o $@ 2>&1|tee $@.err

o/rootclass$(o): rootclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c rootclass.c -o $@ 2>&1|tee $@.err

o/arexxclass$(o): arexxclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c arexxclass.c -o $@ 2>&1|tee $@.err


o/gfx$(o): gfx.c
	$(CC) $(CFLAGS) $(DEFINES) -c gfx.c -o $@ 2>&1|tee $@.err

o/blitter$(o): blitter.c
	$(CC) $(CFLAGS) $(DEFINES) -c blitter.c -o $@ 2>&1|tee $@.err

o/textclass$(o): textclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c textclass.c -o $@ 2>&1|tee $@.err

o/strformat$(o): strformat.c
	$(CC) $(CFLAGS) $(DEFINES) -c strformat.c -o $@ 2>&1|tee $@.err


o/windowclass$(o): windowclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c windowclass.c -o $@ 2>&1|tee $@.err

o/groupclass$(o): groupclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c groupclass.c -o $@ 2>&1|tee $@.err

o/spacingclass$(o): spacingclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c spacingclass.c -o $@ 2>&1|tee $@.err

o/pageclass$(o): pageclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c pageclass.c -o $@ 2>&1|tee $@.err

o/viewclass$(o): viewclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c viewclass.c -o $@ 2>&1|tee $@.err

o/externalclass$(o): externalclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c externalclass.c -o $@ 2>&1|tee $@.err


o/frameclass$(o): frameclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c frameclass.c -o $@ 2>&1|tee $@.err

o/labelclass$(o): labelclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c labelclass.c -o $@ 2>&1|tee $@.err

o/separatorclass$(o): separatorclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c separatorclass.c -o $@ 2>&1|tee $@.err

o/vectorclass$(o): vectorclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c vectorclass.c -o $@ 2>&1|tee $@.err

o/systemiclass$(o): systemiclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c systemiclass.c -o $@ 2>&1|tee $@.err


o/baseclass$(o): baseclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c baseclass.c -o $@ 2>&1|tee $@.err

o/areaclass$(o): areaclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c areaclass.c -o $@ 2>&1|tee $@.err

o/buttonclass$(o): buttonclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c buttonclass.c -o $@ 2>&1|tee $@.err

o/checkboxclass$(o): checkboxclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c checkboxclass.c -o $@ 2>&1|tee $@.err

o/commodityclass$(o): commodityclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c commodityclass.c -o $@ 2>&1|tee $@.err

o/cycleclass$(o): cycleclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c cycleclass.c -o $@ 2>&1|tee $@.err

o/indicatorclass$(o): indicatorclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c indicatorclass.c -o $@ 2>&1|tee $@.err

o/infoclass$(o): infoclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c infoclass.c -o $@ 2>&1|tee $@.err

o/listclass$(o): listclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c listclass.c -o $@ 2>&1|tee $@.err

o/mxclass$(o): mxclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c mxclass.c -o $@ 2>&1|tee $@.err

o/progressclass$(o): progressclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c progressclass.c -o $@ 2>&1|tee $@.err

o/propclass$(o): propclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c propclass.c -o $@ 2>&1|tee $@.err

o/sliderclass$(o): sliderclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c sliderclass.c -o $@ 2>&1|tee $@.err

o/stringclass$(o): stringclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c stringclass.c -o $@ 2>&1|tee $@.err

o/radiobuttonclass$(o): radiobuttonclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c radiobuttonclass.c -o $@ 2>&1|tee $@.err


o/aslreqclass$(o): aslreqclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c aslreqclass.c -o $@ 2>&1|tee $@.err

o/filereqclass$(o): filereqclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c filereqclass.c -o $@ 2>&1|tee $@.err

o/fontreqclass$(o): fontreqclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c fontreqclass.c -o $@ 2>&1|tee $@.err

o/screenreqclass$(o): screenreqclass.c
	$(CC) $(CFLAGS) $(DEFINES) -c screenreqclass.c -o $@ 2>&1|tee $@.err

