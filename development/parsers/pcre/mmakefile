# Copyright © 2003, The AROS Development Team. All rights reserved.
# $Id$

include $(TOP)/config/make.cfg

EXEDIR := $(CONTRIBDIR)/Development/Parsers

#MM contrib-development-parsers-pcre : setup includes linklibs
#MM- contrib-development : contrib-development-parsers-pcre
#MM- linklibs : contrib-development-parsers-pcre


.PHONY : contrib-development-parsers-pcre contrib-development-parsers-pcre-setup contrib-development-parsers-pcre-clean contrib-development-parsers-pcre-quick

#MM- contrib-development-parsers-pcre : setup includes linklibs contrib-development-parsers-pcre-quick

#MM
contrib-development-parsers-pcre-quick : $(GENDIR)/$(CURDIR)/.configured
	@$(MAKE) -C $(GENDIR)/$(CURDIR)
	@$(MAKE) -C $(GENDIR)/$(CURDIR) install

$(TOP)/$(CURDIR)/.files-touched:
	@find . | xargs $(TOUCH) -r configure 
	@$(ECHO) YES > $@

$(GENDIR)/$(CURDIR)/.configured : $(TOP)/$(CURDIR)/.files-touched $(TOP)/$(CURDIR)/mmakefile
	@$(FOR) dir in $(GENDIR)/$(CURDIR) ; do \
	    $(IF) $(TEST) ! -d $$dir ; then $(MKDIR) $$dir ; else $(NOP) ; fi ; \
	done
	cd $(GENDIR)/$(CURDIR); \
	    $(RM) config.cache; \
	    for AR2 in $(AR); do break; done; \
	    for RANLIB2 in $(RANLIB); do break; done; \
	    if [ "yes" = "yes" ]; then nix=-nix; else nix=; fi; \
	    AR=$$AR2 RANLIB=$$RANLIB2 \
	    CC="$(TOOLDIR)/$(AROS_TARGET_CPU)-$(AROS_TARGET_ARCH)-aros-gcc $$nix" \
	    CC_FOR_BUILD="$(HOST_CC)" \
	    $(TOP)/$(CURDIR)/configure --prefix=$(CONTRIBDIR) --bindir=$(CONTRIBDIR) --libdir=$(LIBDIR) \
	    --includedir=$(INCDIR)  --disable-stack-for-recursion --without-pic --disable-shared \
	    --host=$(AROS_TARGET_CPU)-$(AROS_TARGET_ARCH)-aros
	$(ECHO) YES > $@

#MM
contrib-development-parsers-pcre-clean :
	@if [ -e $(GENDIR)/$(CURDIR)/Makefile ]; then \
	    $(MAKE) -C $(GENDIR)/$(CURDIR) uninstall; \
        fi
	@$(RM) $(GENDIR)/$(CURDIR)

# Delete generated makefiles
#MM
clean ::
	@$(RM) $(TOP)/$(CURDIR)/mmakefile $(TOP)/$(CURDIR)/mmakefile.bak

include $(TOP)/config/make.tail

BDID := $(BDTARGETID)
