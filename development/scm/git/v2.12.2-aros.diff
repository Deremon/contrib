diff -ruN -X ./exclude.patterns git-2.12.2/compat/poll/poll.c git-2.12.2.aros/compat/poll/poll.c
--- git-2.12.2/compat/poll/poll.c	2017-03-24 19:59:15.000000000 +0000
+++ git-2.12.2.aros/compat/poll/poll.c	2017-04-30 01:16:52.401864090 +0100
@@ -48,6 +48,9 @@
 # include <stdio.h>
 # include <conio.h>
 #else
+# if defined(__AROS__)
+#  include <proto/socket.h>
+# endif
 # include <sys/time.h>
 # include <sys/socket.h>
 # ifndef NO_SYS_SELECT_H
diff -ruN -X ./exclude.patterns git-2.12.2/config.mak.uname git-2.12.2.aros/config.mak.uname
--- git-2.12.2/config.mak.uname	2017-03-24 19:59:15.000000000 +0000
+++ git-2.12.2.aros/config.mak.uname	2017-04-30 01:05:47.127436790 +0100
@@ -1,11 +1,13 @@
 # Platform specific Makefile tweaks based on uname detection
 
-uname_S := $(shell sh -c 'uname -s 2>/dev/null || echo not')
-uname_M := $(shell sh -c 'uname -m 2>/dev/null || echo not')
-uname_O := $(shell sh -c 'uname -o 2>/dev/null || echo not')
-uname_R := $(shell sh -c 'uname -r 2>/dev/null || echo not')
-uname_P := $(shell sh -c 'uname -p 2>/dev/null || echo not')
-uname_V := $(shell sh -c 'uname -v 2>/dev/null || echo not')
+UNAME ?= uname
+
+uname_S := $(shell sh -c '$(UNAME) -s 2>/dev/null || echo not')
+uname_M := $(shell sh -c '$(UNAME) -m 2>/dev/null || echo not')
+uname_O := $(shell sh -c '$(UNAME) -o 2>/dev/null || echo not')
+uname_R := $(shell sh -c '$(UNAME) -r 2>/dev/null || echo not')
+uname_P := $(shell sh -c '$(UNAME) -p 2>/dev/null || echo not')
+uname_V := $(shell sh -c '$(UNAME) -v 2>/dev/null || echo not')
 
 ifdef MSVC
 	# avoid the MingW and Cygwin configuration sections
@@ -17,6 +19,21 @@
 # because maintaining the nesting to match is a pain.  If
 # we had "elif" things would have been much nicer...
 
+ifeq ($(uname_S),AROS)
+	BASIC_CFLAGS += -D__BSD_VISIBLE
+	NO_CURL = YesPlease 
+	BLK_SHA1 = YesPlease 
+	NO_LIBGEN_H = YesPlease
+	# Copied from Windows
+	NO_REGEX = YesPlease
+	NO_GETTEXT = YesPlease
+	NO_PYTHON = YesPlease
+	# Copied from NONSTOP_KERNEL
+	NO_NSEC = YesPlease
+	NO_PREAD = YesPlease
+	NO_MMAP = YesPlease
+	NO_POLL = YesPlease
+endif
 ifeq ($(uname_S),OSF1)
 	# Need this for u_short definitions et al
 	BASIC_CFLAGS += -D_OSF_SOURCE
diff -ruN -X ./exclude.patterns git-2.12.2/configure.ac git-2.12.2.aros/configure.ac
--- git-2.12.2/configure.ac	2017-03-24 19:59:15.000000000 +0000
+++ git-2.12.2.aros/configure.ac	2017-04-30 01:05:47.127436790 +0100
@@ -707,17 +707,17 @@
 test -n "$NEEDS_LIBGEN" && LIBS="$LIBS -lgen"
 
 AC_CHECK_LIB([c], [gettext],
-[LIBC_CONTAINS_LIBINTL=YesPlease],
-[LIBC_CONTAINS_LIBINTL=])
-GIT_CONF_SUBST([LIBC_CONTAINS_LIBINTL])
+[NO_GETTEXT=],
+[NO_GETTEXT=YesPlease])
+GIT_CONF_SUBST([NO_GETTEXT])
 
 #
 # Define NO_GETTEXT if you don't want Git output to be translated.
 # A translated Git requires GNU libintl or another gettext implementation
 AC_CHECK_HEADER([libintl.h],
-[NO_GETTEXT=],
-[NO_GETTEXT=YesPlease])
-GIT_CONF_SUBST([NO_GETTEXT])
+[LIBC_CONTAINS_LIBINTL=YesPlease],
+[LIBC_CONTAINS_LIBINTL=])
+GIT_CONF_SUBST([LIBC_CONTAINS_LIBINTL])
 
 if test -z "$NO_GETTEXT"; then
     test -n "$LIBC_CONTAINS_LIBINTL" || LIBS="$LIBS -lintl"
diff -ruN -X ./exclude.patterns git-2.12.2/git-compat-util.h git-2.12.2.aros/git-compat-util.h
--- git-2.12.2/git-compat-util.h	2017-03-24 19:59:15.000000000 +0000
+++ git-2.12.2.aros/git-compat-util.h	2017-04-30 01:23:31.348318769 +0100
@@ -180,11 +180,13 @@
 #include <regex.h>
 #include <utime.h>
 #include <syslog.h>
+#ifndef __AROS__
 #ifndef NO_SYS_POLL_H
 #include <sys/poll.h>
 #else
 #include <poll.h>
 #endif
+#endif /* !__AROS__ */
 #ifdef HAVE_BSD_SYSCTL
 #include <sys/sysctl.h>
 #endif
@@ -231,6 +233,21 @@
 #define _ALL_SOURCE 1
 #endif
 
+#ifdef __AROS__
+#include <proto/socket.h>
+
+#define fork vfork
+#define getpagesize() PAGE_SIZE
+
+#define POLLIN 0x1
+#define POLLOUT 0x4
+struct pollfd {
+ int fd;
+ int events;
+};
+#define poll(pfd, a, b)
+#endif
+
 /* used on Mac OS X */
 #ifdef PRECOMPOSE_UNICODE
 #include "compat/precompose_utf8.h"
diff -ruN -X ./exclude.patterns git-2.12.2/refs/iterator.c git-2.12.2.aros/refs/iterator.c
--- git-2.12.2/refs/iterator.c	2017-03-24 19:59:15.000000000 +0000
+++ git-2.12.2.aros/refs/iterator.c	2017-04-30 01:24:21.413877812 +0100
@@ -8,6 +8,12 @@
 #include "refs/refs-internal.h"
 #include "iterator.h"
 
+#ifdef __AROS__
+#ifdef select
+#undef select
+#endif
+#endif
+
 int ref_iterator_advance(struct ref_iterator *ref_iterator)
 {
 	return ref_iterator->vtable->advance(ref_iterator);
diff -ruN -X ./exclude.patterns git-2.12.2/run-command.c git-2.12.2.aros/run-command.c
--- git-2.12.2/run-command.c	2017-03-24 19:59:15.000000000 +0000
+++ git-2.12.2.aros/run-command.c	2017-04-30 01:05:47.127436790 +0100
@@ -913,6 +913,7 @@
 	return ret;
 }
 
+#ifndef __AROS__
 struct io_pump {
 	/* initialized by caller */
 	int fd;
@@ -1385,3 +1386,4 @@
 	pp_cleanup(&pp);
 	return 0;
 }
+#endif
diff -ruN -X ./exclude.patterns git-2.12.2/transport.c git-2.12.2.aros/transport.c
--- git-2.12.2/transport.c	2017-03-24 19:59:15.000000000 +0000
+++ git-2.12.2.aros/transport.c	2017-04-30 01:23:53.252563356 +0100
@@ -17,6 +17,12 @@
 #include "sha1-array.h"
 #include "sigchain.h"
 
+#ifdef __AROS__
+#ifdef connect
+#undef connect
+#endif
+#endif
+
 static void set_upstreams(struct transport *transport, struct ref *refs,
 	int pretend)
 {
