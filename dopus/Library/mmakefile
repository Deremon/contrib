####################################################################
####################################################################
############# THIS IS A GENERATED FILE ! DO NOT EDIT ###############
####################################################################
####################################################################
# $Id$
include $(TOP)/config/make.cfg

LIBNAME		:= dopus
ULIBNAME	:= DOpus

DEST_INC	:= $(INCDIR)/proto/dopus.h
GEN_INC		:= $(GENINCDIR)/proto/dopus.h

FILES	:= functable data

FUNCTIONS	:= \
	simplerequest	\
	filereq		\
	graphics	\
	asmfuncs_in_c	\
	asmfuncs_in_c_2	\
	strings		\
	imagery		\
	borders		\
	dospaths	\
	gui		\
	dos_exec	\
	listview	\
	dopus_stuff	\
	misc		\
	menus		\
	language	\
	wildcard	\
	dates		\
	requesters
	
	
	
STARTUP = $(LIBDIR)/startup.o
LIBS = -L$(LIBDIR) -l$(LIBNAME) -larossupport -lamiga -larosc -larosm 
DEPLIBS = $(LIBDIR)/libamiga.a $(LIBDIR)/libarossupport.a $(STARTUP) \
	$(LIBDIR)/libarosc.a $(LIBDIR)/libarosm.a 

SLIB	      := $(SLIBDIR)/$(LIBNAME).library
LIB	      := $(LIBDIR)/lib$(LIBNAME).a
INIT_FILE     := $(LIBNAME)_init
END_FILE      := $(LIBNAME)_endtag
OBJDIR		      := $(GENDIR)/$(CURDIR)
INITFUNC      := $(OBJDIR)/$(INIT_FILE).o
ENDFUNC       := $(OBJDIR)/$(END_FILE).o
SYS_FILES     := $(SYS_FILES) $(INIT_FILE) functable
OBJS	      := $(foreach f,$(FILES) functions $(ADDITIONAL_OBJS),$(OBJDIR)/$(f).o)
SYS_OBJS      := $(foreach f,$(SYS_FILES),$(OBJDIR)/$(f).o)

$(SLIB) : $(LIB) $(DEPLIBS) $(EXTRA_DEPLIBS) $(OBJS) $(SYS_OBJS) $(ENDFUNC)
	@$(ECHO) "Building $(notdir $@) ..."
	@$(CC) $(ILDFLAGS) $(GENMAP) $(LIBNAME)lib.map $(SYS_OBJS) $(EXTRA_LIBS) $(LIBS) $(ENDFUNC) -o $@ 2>&1|tee $(LIBNAME)lib.err
	@$(ECHO) "Checking $@..."
	@$(CHECKUDS) $@ > undefdsyms.list
	@$(IF) $(TEST) -s undefdsyms.list ; then \
	    $(CAT) undefdsyms.list >> $(@F)-x.err ; \
	    $(ECHO) "There are undefined symbols in $@:" ; \
	    $(CAT) undefdsyms.list ; \
	else $(NOP) ; fi
	@$(RM) undefdsyms.list
	@$(IF) $(TEST) ! -s $(LIBNAME)lib.err; then $(RM) $(LIBNAME)lib.err ; else $(NOP) ; fi
	@$(STRIP) $@

$(LIB) : $(OBJS)
	@$(ECHO) "Adding functions to $(notdir $@) ..."
	@$(AR) $@ $(OBJS)
	@$(RANLIB) $@

$(OBJDIR)/functions.o : functions.c
	@$(ECHO) "Compiling $(CURDIR)/$<..."
	@$(IF) $(CC) $(CFLAGS) -c $< -o $@ > $(GENDIR)/cerrors 2>&1 ; then \
	    $(IF) $(TEST) -s $(GENDIR)/cerrors ; then \
		$(ECHO) "$(CURDIR)/$<: $(CC) $(CFLAGS) -c $< -o $@" >> $(GENDIR)/errors ; \
		$(CAT) $(GENDIR)/cerrors >> $(GENDIR)/errors ; \
	    else \
		$(NOP) ; \
	    fi ; \
	else \
	    $(ECHO) "Compile failed: $(CC) $(CFLAGS) -c $< -o $@" 1>&2 ; \
	    tee < $(GENDIR)/cerrors -a $(GENDIR)/errors 1>&2 ; \
	    exit 1 ; \
	fi


functions.c : $(foreach f,$(FUNCTIONS),$(f).c)
	@$(CPAK) $(FUNCTIONS)

show-flags :
	@$(ECHO) "CFLAGS=$(CFLAGS)"

ALL_FUNCTIONS := $(FUNCTIONS)
#MM includes-generate : setup-clib
includes-generate : setup libdefs.h $(OBJDIR)/headers.stamp \
			    $(INCDIR)/clib/$(LIBNAME)_protos.h \
			    $(INCDIR)/defines/$(LIBNAME).h
	@$(NOP)

FSRCS := $(foreach f,$(ALL_FUNCTIONS),$(f).c)

$(OBJDIR)/headers.stamp : $(FSRCS) $(SCRIPTDIR)/genshared \
	    $(SCRIPTDIR)/genclib.awk $(SCRIPTDIR)/gendefines.awk
	@$(SCRIPTDIR)/genshared -clib -prefix $(GENINCDIR) $(FSRCS)
	@$(SCRIPTDIR)/genshared -defines -prefix $(GENINCDIR) $(FSRCS)
	@$(TOUCH) $@

$(INCDIR)/clib/$(LIBNAME)_protos.h : $(GENINCDIR)/clib/$(LIBNAME)_protos.h
	$(CP) $< $@

$(INCDIR)/defines/$(LIBNAME).h : $(GENINCDIR)/defines/$(LIBNAME).h
	$(CP) $< $@


$(OBJDIR)/%.o : %.c
	@$(ECHO) "Compiling $(CURDIR)/$<..."
	@$(IF) $(CC) $(CFLAGS) -c $< -o $@ > $(GENDIR)/cerrors 2>&1 ; then \
	    $(IF) $(TEST) -s $(GENDIR)/cerrors ; then \
		$(ECHO) "$(CURDIR)/$<: $(CC) $(CFLAGS) -c $< -o $@" >> $(GENDIR)/errors ; \
		$(CAT) $(GENDIR)/cerrors >> $(GENDIR)/errors ; \
	    else \
		$(NOP) ; \
	    fi ; \
	else \
	    $(ECHO) "Compile failed: $(CC) $(CFLAGS) -c $< -o $@" 1>&2 ; \
	    tee < $(GENDIR)/cerrors -a $(GENDIR)/errors 1>&2 ; \
	    exit 1 ; \
	fi


FUNCTABLE_SRCS := $(foreach f,$(FUNCTIONS),$(f).c)

functable.c : $(FUNCTABLE_SRCS) $(BINDIR)/scripts/genfunctable.awk \
	libdefs.h
	@$(ECHO) "Generating $@..."
	@$(AWK) -f $(BINDIR)/scripts/genfunctable.awk $(FUNCTABLE_SRCS) > $@

$(END_FILE).c : $(TOP)/scripts/makeendtag.awk
	@$(ECHO) "Regenerating $@..."
	@$(AWK) -f $(TOP)/scripts/makeendtag.awk \
		-v lib=$(ULIBNAME)

$(OBJDIR)/$(LIBNAME)_init.o : libdefs.h

libdefs.h : lib.conf $(BINDIR)/scripts/genlibdefs.awk
	@$(ECHO) "Generating $@..."
	@$(AWK) -f $(BINDIR)/scripts/genlibdefs.awk $< > $@



#MM dopus-library : setup includes linklibs
dopus-library : show-flags $(SLIB)
	@$(NOP)


#MM dopus-library-quick : 
dopus-library-quick : show-flags $(SLIB)
	
#MM
setup :
	@$(FOR) dir in $(OBJDIR) $(LIBDIR) $(SLIBDIR) $(DESTDIRS) ; do \
	    $(IF) $(TEST) ! -d $$dir ; then $(MKDIR) $$dir ; else $(NOP) ; fi ; \
	done

#MM
setup-includes :
	@$(FOR) dir in $(GENINCDIR) $(INCDIR) $(GENINCDIR)/proto $(INCDIR)/proto ; do \
	    $(IF) $(TEST) ! -d $$dir ; then $(MKDIR) $$dir ; else $(NOP) ; fi ; \
	done

#MM
includes-copy : $(DEST_INC) $(GEN_INC)
	@$(NOP)
	
$(INCDIR)/proto/dopus.h : ./proto_dopus.h
	$(CP) $(notdir $<) $@


$(GENINCDIR)/proto/dopus.h : ./proto_dopus.h
	$(CP) $(notdir $<) $@
	

#MM dopus-library-clean :
dopus-library-clean : clean

#MM
clean ::
	$(RM) $(OBJDIR) *.err libdefs.h functable.c functions.* mmakefile \
	$(END_FILE).c $(LIB) $(SLIB)

$(OBJDIR)/%.d : %.c
	@$(IF) [ ! -d $(@D) ]; then $(MKDIR) $(@D) ; else $(NOP) ; fi
	@$(ECHO) "Makedepend $(CURDIR)/$<..."
	@$(MKDEPEND) $(CFLAGS) $< -o $@

# Delete generated makefiles
clean ::
	$(RM) mmakefile mmakefile.bak

# Include these files but only if the current target is neither
# setup nor clean.
ifeq (,$(filter clean% setup% includes% ,$(TARGET)))
-include $(foreach f,$(INIT_FILE) $(END_FILE) $(FILES) $(FUNCTIONS),$(OBJDIR)/$(f).d)
endif
