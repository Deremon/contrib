I need an 'send global event' mechanism.
so that i can send a "change to color X" message, and all of the proper tools will receive it.
- the hack in the palette selector would be removed.



add a 'get fg color'  and 'get bg color'  for drawing in color mode, 
so that for cycle we can cycle colors easily.

multicycle - cycle based on the color in the view
colorcycle(rangelist, iview_to_cycle)

view - takes on the palette of the last loaded image.

palette manipulation tools will affect the view's palette

view display window size
scale x1 or x2 from view to the screen display

for now: 
    view is fixed at 2x zoom of screen graphics
    screen graphics overlays:
	menus
	toolbar

    mouse moves go through the view handler, which determines which 'portal'
    to send the mouse events to.

idea:
    Add colors to the palette as needed

Zoom/resolution selector should behave differently.

Enhancements for the next JSUI version:

Dialog structure will include:
    widget handler pointer
    x, y, w, h,
    key
    dialog maintenance flags
    widget flags
    callback pointer (void *)
    3 int values
    3 void * values

Two ideas of focus:

current dialog with focus
current widget with focus

when a widget releases focus, check for new focus position
when a mouse moves, check for new focus position
offer focus to new focus items.  if they accept focus, they locked the focus
don't offer focus until they release it.


dialog runtime handler has a pointer to a video buffer.  
only dirty regions of the buffer get blit.
the visualizer will check for dirty regions.  if there are none, it will
not update at all.

multiple update regions (like 3 or so is all thats really needed)
create a new type, 'rect'  typedef struct{ int, int, int, int } rect;


