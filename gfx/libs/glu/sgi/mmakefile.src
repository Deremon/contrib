#   $Id$
#
#   Generate libGLU.a
#
include $(TOP)/config/make.cfg

#MM- contrib-gfx-libs : contrib-gfx-libs-glu

#MM contrib-gfx-libs-glu : contrib-gnu-crosstools includes contrib-gfx-libs-glu-includes contrib-gfx-libs-glu-cpp

LIBUTIL_SOURCES = \
    libutil/error \
    libutil/glue \
    libutil/mipmap \
    libutil/project \
    libutil/quad \
    libutil/registry
    
LIBTESS_SOURCES = \
    libtess/dict \
    libtess/geom \
    libtess/memalloc \
    libtess/mesh \
    libtess/normal \
    libtess/priorityq \
    libtess/render \
    libtess/sweep \
    libtess/tess \
    libtess/tessmono

LIBNURBS_SOURCES = \
    libnurbs/interface/bezierEval \
    libnurbs/interface/bezierPatch \
    libnurbs/interface/bezierPatchMesh \
    libnurbs/interface/glcurveval \
    libnurbs/interface/glinterface \
    libnurbs/interface/glrenderer \
    libnurbs/interface/glsurfeval \
    libnurbs/interface/incurveeval \
    libnurbs/interface/insurfeval \
    libnurbs/internals/arc \
    libnurbs/internals/arcsorter \
    libnurbs/internals/arctess \
    libnurbs/internals/backend \
    libnurbs/internals/basiccrveval \
    libnurbs/internals/basicsurfeval \
    libnurbs/internals/bin \
    libnurbs/internals/bufpool \
    libnurbs/internals/cachingeval \
    libnurbs/internals/ccw \
    libnurbs/internals/coveandtiler \
    libnurbs/internals/curve \
    libnurbs/internals/curvelist \
    libnurbs/internals/curvesub \
    libnurbs/internals/dataTransform \
    libnurbs/internals/displaylist \
    libnurbs/internals/flist \
    libnurbs/internals/flistsorter \
    libnurbs/internals/hull \
    libnurbs/internals/intersect \
    libnurbs/internals/knotvector \
    libnurbs/internals/mapdesc \
    libnurbs/internals/maplist \
    libnurbs/internals/mesher \
    libnurbs/internals/monotonizer \
    libnurbs/internals/monoTriangulationBackend \
    libnurbs/internals/mycode \
    libnurbs/internals/nurbstess \
    libnurbs/internals/patch \
    libnurbs/internals/patchlist \
    libnurbs/internals/quilt \
    libnurbs/internals/reader \
    libnurbs/internals/renderhints \
    libnurbs/internals/slicer \
    libnurbs/internals/sorter \
    libnurbs/internals/splitarcs \
    libnurbs/internals/subdivider \
    libnurbs/internals/tobezier \
    libnurbs/internals/trimline \
    libnurbs/internals/trimregion \
    libnurbs/internals/trimvertpool \
    libnurbs/internals/uarray \
    libnurbs/internals/varray \
    libnurbs/nurbtess/directedLine \
    libnurbs/nurbtess/gridWrap \
    libnurbs/nurbtess/monoChain \
    libnurbs/nurbtess/monoPolyPart \
    libnurbs/nurbtess/monoTriangulation \
    libnurbs/nurbtess/partitionX \
    libnurbs/nurbtess/partitionY \
    libnurbs/nurbtess/polyDBG \
    libnurbs/nurbtess/polyUtil \
    libnurbs/nurbtess/primitiveStream \
    libnurbs/nurbtess/quicksort \
    libnurbs/nurbtess/rectBlock \
    libnurbs/nurbtess/sampleCompBot \
    libnurbs/nurbtess/sampleComp \
    libnurbs/nurbtess/sampleCompRight \
    libnurbs/nurbtess/sampleCompTop \
    libnurbs/nurbtess/sampledLine \
    libnurbs/nurbtess/sampleMonoPoly \
    libnurbs/nurbtess/searchTree \
    

LIBNURBS_OBJS := $(addsuffix .o,$(addprefix $(GENDIR)/$(CURDIR)/,$(notdir $(LIBNURBS_SOURCES))))

LIBGLU = $(LIBUTIL_SOURCES) \
    $(LIBTESS_SOURCES) \

USER_INCLUDES := \
    -I$(SRCDIR)/$(CURDIR)/include \
    -I$(SRCDIR)/$(CURDIR)/../../../include \
    -I$(SRCDIR)/$(CURDIR)/libnurbs/internals \
    -I$(SRCDIR)/$(CURDIR)/libnurbs/nurbtess \
    
USER_CFLAGS := -DLIBRARYBUILD -fno-asynchronous-unwind-tables -fno-exceptions 

# Remove C-only flags
CXX_FLAGS := $(CFLAGS) $(USER_CFLAGS) -fno-rtti -nostdinc++
CXX_FLAGS := $(subst -Wno-pointer-sign,, $(subst -Werror-implicit-function-declaration,, $(CXX_FLAGS)))

# Define the use of cross compiler
TARGET_CXX = $(TOOLDIR)/$(AROS_TARGET_CPU)-aros-g++

$(LIBNURBS_SOURCES) :
%compile_q cmd=$(TARGET_CXX) opt=$(CXX_FLAGS) from=$(SRCDIR)/$(CURDIR)/$@.cc to="$(addsuffix .o,$(addprefix $(GENDIR)/$(CURDIR)/,$(notdir $@)))"

#MM 
contrib-gfx-libs-glu-cpp : contrib-gfx-libs-glu-cpp-directories-setup $(LIBNURBS_SOURCES)

#MM 
contrib-gfx-libs-glu-cpp-directories-setup :
%mkdir_q dir=$(GENDIR)/$(CURDIR)

%build_linklib mmake=contrib-gfx-libs-glu libname=GLU \
    files="$(LIBGLU)" objs="$(LIBNURBS_OBJS)"

%common
