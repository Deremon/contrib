diff -ruN make-3.81/arscan.c make-3.81.aros/arscan.c
--- make-3.81/arscan.c	2006-02-11 23:16:04.000000000 +0100
+++ make-3.81.aros/arscan.c	2006-04-01 08:40:00.000000000 +0200
@@ -231,7 +231,7 @@
 #endif
 
 #ifndef WINDOWS32
-# ifndef __BEOS__
+# if !defined(__BEOS__) && !defined(__AROS__)
 #  include <ar.h>
 # else
    /* BeOS 5 doesn't have <ar.h> but has archives in the same format
diff -ruN make-3.81/glob/fnmatch.h make-3.81.aros/glob/fnmatch.h
--- make-3.81/glob/fnmatch.h	2006-02-11 21:00:39.000000000 +0100
+++ make-3.81.aros/glob/fnmatch.h	2011-02-24 20:31:57.000000000 +0100
@@ -36,6 +36,9 @@
    non-ANSI C where `const' is problematical.  */
 #endif /* C++ or ANSI C.  */
 
+#if defined __AROS__
+# undef __const
+#endif
 #ifndef const
 # if (defined __STDC__ && __STDC__) || defined __cplusplus || defined WINDOWS32
 #  define __const	const
diff -ruN make-3.81/glob/glob.h make-3.81.aros/glob/glob.h
--- make-3.81/glob/glob.h	2006-02-11 21:00:39.000000000 +0100
+++ make-3.81.aros/glob/glob.h	2011-02-24 20:33:37.000000000 +0100
@@ -29,7 +29,7 @@
 #  undef __PMT
 #  define __P(protos)	protos
 #  define __PMT(protos)	protos
-#  if !defined __GNUC__ || __GNUC__ < 2
+#  if !defined __GNUC__ || __GNUC__ < 2 || defined __AROS__
 #   undef __const
 #   define __const const
 #  endif
@@ -47,7 +47,7 @@
 
 /* We need `size_t' for the following definitions.  */
 #ifndef __size_t
-# if defined __FreeBSD__
+# if defined __FreeBSD__ || defined __AROS__
 #  define __size_t size_t
 # else
 #  if defined __GNUC__ && __GNUC__ >= 2
diff -ruN make-3.81/main.c make-3.81.aros/main.c
--- make-3.81/main.c	2006-03-20 03:36:37.000000000 +0100
+++ make-3.81.aros/main.c	2006-04-01 08:40:00.000000000 +0200
@@ -886,7 +886,7 @@
 }
 
 
-#ifdef _AMIGA
+#if defined(_AMIGA) || defined(__AROS__)
 int
 main (int argc, char **argv)
 #else
@@ -913,6 +913,25 @@
   no_default_sh_exe = 1;
 #endif
 
+#ifdef __AROS__
+  int size = __env_get_environ (NULL, 0);
+  char **envp = (char **) malloc(size);
+  if (envp)
+  {
+    if (__env_get_environ(envp, size) != -1)
+    {
+      environ = envp;
+    }
+    else
+    {
+      free (envp);
+      exit (1);
+    }
+  }
+  else
+    exit (1);
+#endif
+
 #ifdef SET_STACK_SIZE
  /* Get rid of any avoidable limit on stack size.  */
   {
