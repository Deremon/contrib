#ifndef GTKMUI_PROTOS_H
#define GTKMUI_PROTOS_H

GtkWidget* gtk_window_new   (GtkWindowType   type);
void       gtk_window_set_title   (GtkWindow *window,  const gchar *title);
void       gtk_window_set_resizable        (GtkWindow *window, gboolean resizable);
GtkWidget* gtk_button_new (void);
GtkWidget* gtk_button_new_with_label    (const char *label);
GtkWidget* gtk_button_new_from_stock       (const gchar *stock_id);
void       gtk_widget_show  (GtkWidget      *widget);
void       gtk_widget_hide  (GtkWidget *widget);
void       gtk_widget_show_all(GtkWidget *widget);
void       gtk_widget_hide_all(GtkWidget *widget);
void       gtk_widget_grab_default (GtkWidget *widget);
void       gtk_main         (void);
void       gtk_main_quit    (void);
void       gtk_widget_destroy( GtkWidget *widget, GtkWidget *param );
void       gtk_widget_unref(GtkWidget *widget);
GtkWidget *gtk_widget_ref(GtkWidget *widget);
void       gtk_container_add(GtkContainer  *container, GtkWidget *widget);
void       gtk_container_set_border_width (GtkContainer *container, guint border_width); 
GtkWidget *gtk_hbox_new     (gint homogeneous, gint spacing );
GtkWidget *gtk_vbox_new     (gint homogeneous, gint spacing );
void       gtk_box_pack_start( GtkBox *box, GtkWidget *child, gint expand, gint fill, gint padding );
void       gtk_box_pack_end (GtkBox *box, GtkWidget *child, gint expand, gint fill, gint padding );
void       gtk_widget_set_size_request    (GtkWidget           *widget, gint                 width, gint                 height);
GtkWidget *gtk_menu_new      (void);
GtkWidget *gtk_menu_bar_new      (void);
GtkWidget *gtk_option_menu_new             (void);
GtkWidget *gtk_menu_item_new_with_label (const char *label );
void       gtk_menu_shell_append        (GtkMenuShell *menu_shell, GtkWidget *child);
void       gtk_menu_item_set_submenu    (GtkMenuItem         *menu_item, GtkWidget           *submenu);
GtkWidget *gtk_menu_get_attach_widget   (GtkMenu *menu);
void       gtk_option_menu_set_menu(GtkOptionMenu *option_menu, GtkWidget *menu);
GtkWidget *gtk_table_new(guint rows, guint columns, gboolean homogeneous);
void       gtk_table_attach_defaults  (GtkTable        *table, GtkWidget       *widget, guint            left_attach, guint            right_attach, guint            top_attach, guint            bottom_attach);
void      gtk_table_attach( GtkTable         *table, GtkWidget        *child, guint            left_attach, guint            right_attach, guint            top_attach, guint            bottom_attach, GtkAttachOptions xoptions, GtkAttachOptions yoptions, guint            xpadding, guint            ypadding );
void       gtk_table_set_row_spacings      (GtkTable *table, guint spacing);
void       gtk_table_set_col_spacings      (GtkTable *table, guint spacing);
GtkWidget *gtk_entry_new( void );
void       gtk_entry_set_text( GtkEntry    *entry, const gchar *text );
const gchar *gtk_entry_get_text( GtkEntry *entry );
void gtk_editable_set_editable( GtkEditable *entry, gboolean     editable );
gchar*      gtk_editable_get_chars (GtkEditable *editable, gint start_pos, gint end_pos);
void gtk_entry_set_visibility( GtkEntry *entry, gboolean  visible );
void gtk_editable_select_region( GtkEditable *entry, gint         start, gint         end );
//GtkWidget *gtk_toggle_button_new( void );
//GtkWidget *gtk_toggle_button_new_with_label( const gchar *label );
//GtkWidget *gtk_toggle_button_new_with_mnemonic( const gchar *label );
//gboolean   gtk_toggle_button_get_active	(GtkToggleButton *toggle_button);
void       gtk_toggle_button_set_active( GtkToggleButton *toggle_button, gboolean        is_active );
//GtkWidget* gtk_check_button_new               (void);
GtkWidget* gtk_check_button_new_with_label    (const gchar *label);
//GtkWidget* gtk_check_button_new_with_mnemonic (const gchar *label);
void       gtk_editable_set_editable         (GtkEditable *editable, gboolean     is_editable);
//gboolean    gtk_editable_get_editable         (GtkEditable *editable);
GtkWidget*  gtk_image_new                   (void);
GtkWidget*  gtk_image_new_from_file         (const gchar *filename);
GSList     *gtk_radio_button_group(GtkWidget *widget);
GSList     *gtk_radio_button_get_group(GtkWidget *widget);
GtkWidget  *gtk_radio_button_new_with_label_from_widget( GtkRadioButton *group, const gchar    *label );
GtkWidget  *gtk_radio_button_new_with_label( GSList *group, const gchar  *label );
GtkWidget  *gtk_arrow_new(GtkArrowType arrow_type, GtkShadowType shadow_type);
GtkWidget  *gtk_hseparator_new(void);
GtkWidget  *gtk_hscrollbar_new(GtkAdjustment *adjustment);
GtkWidget  *gtk_hscale_new( GtkAdjustment *adjustment );
GtkWidget  *gtk_vscale_new( GtkAdjustment *adjustment );
void        gtk_scale_set_digits            (GtkScale *scale, gint digits);
void        gtk_scale_set_value_pos(GtkScale *scale, GtkPositionType pos);
GtkAdjustment *gtk_adjustment_new(gdouble value, gdouble lower, gdouble upper, gdouble step_increment, gdouble page_increment, gdouble page_size );
void        gtk_adjustment_set_value(GtkAdjustment *adjustment, gdouble value);
void        gtk_range_set_update_policy     (GtkRange *range, GtkUpdateType policy);
GtkTooltips* gtk_tooltips_new(void);
void        gtk_tooltips_set_tip(GtkTooltips *tooltips, GtkWidget *widget, const gchar *tip_text, const gchar *tip_private);
void        gtk_tooltips_disable(GtkTooltips *tooltips);
void        gtk_tooltips_enable(GtkTooltips *tooltips);
void        gtk_tooltips_force_window(GtkTooltips *tooltips);
GtkWidget*  gtk_file_selection_new          (const gchar *title);
void        gtk_file_selection_set_filename (GtkFileSelection *filesel, const gchar *filename);
const gchar* gtk_file_selection_get_filename (GtkFileSelection *filesel);
//GtkWidget*  gtk_frame_new                   (const gchar *label);
//void        gtk_frame_set_label             (GtkFrame *frame, const gchar *label);
//void        gtk_frame_set_label_align       (GtkFrame *frame, gfloat xalign, gfloat yalign);
//void        gtk_frame_set_shadow_type       (GtkFrame *frame, GtkShadowType type);

void gtk_widget_set_sensitive(GtkWidget *widget, gboolean sensitive);
GtkWidget *gtk_vscrollbar_new( GtkAdjustment *adjustment );
void gtk_editable_insert_text (GtkEditable *editable, const gchar *in_text, gint new_text_length, gint *position);
int gtk_init(int argc,char *argv[]);

#endif /* GTKMUI_PROTOS_H */